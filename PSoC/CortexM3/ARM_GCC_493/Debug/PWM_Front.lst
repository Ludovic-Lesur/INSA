ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_Front.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PWM_Front_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	PWM_Front_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PWM_Front_Enable, %function
  24              	PWM_Front_Enable:
  25              	.LFB2:
  26              		.file 1 "Generated_Source\\PSoC5\\PWM_Front.c"
   1:Generated_Source\PSoC5/PWM_Front.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_Front.c **** * File Name: PWM_Front.c
   3:Generated_Source\PSoC5/PWM_Front.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_Front.c **** *
   5:Generated_Source\PSoC5/PWM_Front.c **** * Description:
   6:Generated_Source\PSoC5/PWM_Front.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_Front.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_Front.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_Front.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_Front.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_Front.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_Front.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_Front.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_Front.c **** *
  15:Generated_Source\PSoC5/PWM_Front.c **** * Note:
  16:Generated_Source\PSoC5/PWM_Front.c **** *
  17:Generated_Source\PSoC5/PWM_Front.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_Front.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_Front.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_Front.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_Front.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_Front.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_Front.c **** 
  24:Generated_Source\PSoC5/PWM_Front.c **** #include "PWM_Front.h"
  25:Generated_Source\PSoC5/PWM_Front.c **** 
  26:Generated_Source\PSoC5/PWM_Front.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_Front.c **** #ifdef PWM_Front_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_Front.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_Front.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_Front.c **** #endif /* PWM_Front_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_Front.c **** 
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 2


  32:Generated_Source\PSoC5/PWM_Front.c **** uint8 PWM_Front_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_Front.c **** 
  34:Generated_Source\PSoC5/PWM_Front.c **** 
  35:Generated_Source\PSoC5/PWM_Front.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_Front.c **** * Function Name: PWM_Front_Start
  37:Generated_Source\PSoC5/PWM_Front.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_Front.c **** *
  39:Generated_Source\PSoC5/PWM_Front.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_Front.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_Front.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_Front.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_Front.c **** *
  44:Generated_Source\PSoC5/PWM_Front.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_Front.c **** *  None
  46:Generated_Source\PSoC5/PWM_Front.c **** *
  47:Generated_Source\PSoC5/PWM_Front.c **** * Return:
  48:Generated_Source\PSoC5/PWM_Front.c **** *  None
  49:Generated_Source\PSoC5/PWM_Front.c **** *
  50:Generated_Source\PSoC5/PWM_Front.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_Front.c **** *  PWM_Front_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_Front.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_Front.c **** *
  54:Generated_Source\PSoC5/PWM_Front.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_Front.c **** void PWM_Front_Start(void) 
  56:Generated_Source\PSoC5/PWM_Front.c **** {
  57:Generated_Source\PSoC5/PWM_Front.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_Front.c ****     if(PWM_Front_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_Front.c ****     {
  60:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_Init();
  61:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_Front.c ****     }
  63:Generated_Source\PSoC5/PWM_Front.c ****     PWM_Front_Enable();
  64:Generated_Source\PSoC5/PWM_Front.c **** 
  65:Generated_Source\PSoC5/PWM_Front.c **** }
  66:Generated_Source\PSoC5/PWM_Front.c **** 
  67:Generated_Source\PSoC5/PWM_Front.c **** 
  68:Generated_Source\PSoC5/PWM_Front.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_Front.c **** * Function Name: PWM_Front_Init
  70:Generated_Source\PSoC5/PWM_Front.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_Front.c **** *
  72:Generated_Source\PSoC5/PWM_Front.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_Front.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_Front.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_Front.c **** *  PWM_Front_Start().
  76:Generated_Source\PSoC5/PWM_Front.c **** *
  77:Generated_Source\PSoC5/PWM_Front.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_Front.c **** *  None
  79:Generated_Source\PSoC5/PWM_Front.c **** *
  80:Generated_Source\PSoC5/PWM_Front.c **** * Return:
  81:Generated_Source\PSoC5/PWM_Front.c **** *  None
  82:Generated_Source\PSoC5/PWM_Front.c **** *
  83:Generated_Source\PSoC5/PWM_Front.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_Front.c **** void PWM_Front_Init(void) 
  85:Generated_Source\PSoC5/PWM_Front.c **** {
  86:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UsingFixedFunction || PWM_Front_UseControl)
  87:Generated_Source\PSoC5/PWM_Front.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UsingFixedFunction || PWM_Front_UseControl) */
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 3


  89:Generated_Source\PSoC5/PWM_Front.c **** 
  90:Generated_Source\PSoC5/PWM_Front.c ****     #if(!PWM_Front_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_Front.c ****         #if(PWM_Front_UseStatus)
  92:Generated_Source\PSoC5/PWM_Front.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_Front.c ****             uint8 PWM_Front_interruptState;
  94:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UseStatus) */
  95:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (!PWM_Front_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_Front.c **** 
  97:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_Front.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_CONTROL |= PWM_Front_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_Front.c ****         #if (PWM_Front_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_CONTROL |= PWM_Front_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_Front.c **** 
 104:Generated_Source\PSoC5/PWM_Front.c ****         ctrl = PWM_Front_CONTROL3 & ((uint8 )(~PWM_Front_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_CONTROL3 = ctrl | PWM_Front_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_Front.c **** 
 107:Generated_Source\PSoC5/PWM_Front.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_RT1 &= ((uint8)(~PWM_Front_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_RT1 |= PWM_Front_SYNC;
 110:Generated_Source\PSoC5/PWM_Front.c **** 
 111:Generated_Source\PSoC5/PWM_Front.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_RT1 &= ((uint8)(~PWM_Front_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_RT1 |= PWM_Front_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_Front.c **** 
 115:Generated_Source\PSoC5/PWM_Front.c ****     #elif (PWM_Front_UseControl)
 116:Generated_Source\PSoC5/PWM_Front.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_Front.c ****         ctrl = PWM_Front_CONTROL & ((uint8)(~PWM_Front_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_Front.c ****                 ((uint8)(~PWM_Front_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_CONTROL = ctrl | PWM_Front_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_Front.c ****                                    PWM_Front_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_Front.c **** 
 123:Generated_Source\PSoC5/PWM_Front.c ****     #if (!PWM_Front_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_Front.c ****         #if (PWM_Front_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_Front.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_AUX_CONTROLDP0 |= (PWM_Front_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_Front.c ****         #else /* (PWM_Front_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_Front.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_AUX_CONTROLDP0 |= (PWM_Front_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_AUX_CONTROLDP1 |= (PWM_Front_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_Front.c **** 
 133:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_WriteCounter(PWM_Front_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (!PWM_Front_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_Front.c **** 
 136:Generated_Source\PSoC5/PWM_Front.c ****     PWM_Front_WritePeriod(PWM_Front_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_Front.c **** 
 138:Generated_Source\PSoC5/PWM_Front.c ****         #if (PWM_Front_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_WriteCompare(PWM_Front_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_Front.c ****         #else
 141:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_WriteCompare1(PWM_Front_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_WriteCompare2(PWM_Front_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_Front.c **** 
 145:Generated_Source\PSoC5/PWM_Front.c ****         #if (PWM_Front_KillModeMinTime)
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 4


 146:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_WriteKillTime(PWM_Front_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_Front.c **** 
 149:Generated_Source\PSoC5/PWM_Front.c ****         #if (PWM_Front_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_WriteDeadTime(PWM_Front_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_Front.c **** 
 153:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UseStatus || PWM_Front_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_SetInterruptMode(PWM_Front_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UseStatus || PWM_Front_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_Front.c **** 
 157:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_Front.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_GLOBAL_ENABLE |= PWM_Front_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_Front.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_CONTROL2 |= PWM_Front_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_Front.c ****     #else
 163:Generated_Source\PSoC5/PWM_Front.c ****         #if(PWM_Front_UseStatus)
 164:Generated_Source\PSoC5/PWM_Front.c **** 
 165:Generated_Source\PSoC5/PWM_Front.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_Front.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_Front.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_STATUS_AUX_CTRL |= PWM_Front_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_Front.c **** 
 171:Generated_Source\PSoC5/PWM_Front.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_Front.c ****             CyExitCriticalSection(PWM_Front_interruptState);
 173:Generated_Source\PSoC5/PWM_Front.c **** 
 174:Generated_Source\PSoC5/PWM_Front.c ****             /* Clear the FIFO to enable the PWM_Front_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_Front.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UseStatus) */
 178:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_Front.c **** }
 180:Generated_Source\PSoC5/PWM_Front.c **** 
 181:Generated_Source\PSoC5/PWM_Front.c **** 
 182:Generated_Source\PSoC5/PWM_Front.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_Front.c **** * Function Name: PWM_Front_Enable
 184:Generated_Source\PSoC5/PWM_Front.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_Front.c **** *
 186:Generated_Source\PSoC5/PWM_Front.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_Front.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_Front.c **** *
 189:Generated_Source\PSoC5/PWM_Front.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_Front.c **** *  None
 191:Generated_Source\PSoC5/PWM_Front.c **** *
 192:Generated_Source\PSoC5/PWM_Front.c **** * Return:
 193:Generated_Source\PSoC5/PWM_Front.c **** *  None
 194:Generated_Source\PSoC5/PWM_Front.c **** *
 195:Generated_Source\PSoC5/PWM_Front.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_Front.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_Front.c **** *
 198:Generated_Source\PSoC5/PWM_Front.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_Front.c **** void PWM_Front_Enable(void) 
 200:Generated_Source\PSoC5/PWM_Front.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_Front.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_GLOBAL_ENABLE |= PWM_Front_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_GLOBAL_STBY_ENABLE |= PWM_Front_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_Front.c **** 
 207:Generated_Source\PSoC5/PWM_Front.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UseControl || PWM_Front_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_CONTROL |= PWM_Front_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 74640040 		.word	1073767540
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	PWM_Front_Enable, .-PWM_Front_Enable
  45              		.section	.text.PWM_Front_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	PWM_Front_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	PWM_Front_Stop, %function
  51              	PWM_Front_Stop:
  52              	.LFB3:
 210:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UseControl || PWM_Front_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_Front.c **** }
 212:Generated_Source\PSoC5/PWM_Front.c **** 
 213:Generated_Source\PSoC5/PWM_Front.c **** 
 214:Generated_Source\PSoC5/PWM_Front.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_Front.c **** * Function Name: PWM_Front_Stop
 216:Generated_Source\PSoC5/PWM_Front.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_Front.c **** *
 218:Generated_Source\PSoC5/PWM_Front.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_Front.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_Front.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_Front.c **** *
 222:Generated_Source\PSoC5/PWM_Front.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_Front.c **** *  None
 224:Generated_Source\PSoC5/PWM_Front.c **** *
 225:Generated_Source\PSoC5/PWM_Front.c **** * Return:
 226:Generated_Source\PSoC5/PWM_Front.c **** *  None
 227:Generated_Source\PSoC5/PWM_Front.c **** *
 228:Generated_Source\PSoC5/PWM_Front.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_Front.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_Front.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_Front.c **** *
 232:Generated_Source\PSoC5/PWM_Front.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_Front.c **** void PWM_Front_Stop(void) 
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 6


 234:Generated_Source\PSoC5/PWM_Front.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UseControl || PWM_Front_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_CONTROL &= ((uint8)(~PWM_Front_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 74640040 		.word	1073767540
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	PWM_Front_Stop, .-PWM_Front_Stop
  71              		.section	.text.PWM_Front_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	PWM_Front_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_Front_WriteCounter, %function
  77              	PWM_Front_WriteCounter:
  78              	.LFB4:
 237:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UseControl || PWM_Front_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_Front.c **** 
 239:Generated_Source\PSoC5/PWM_Front.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_GLOBAL_ENABLE &= ((uint8)(~PWM_Front_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Front_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_Front.c **** }
 245:Generated_Source\PSoC5/PWM_Front.c **** 
 246:Generated_Source\PSoC5/PWM_Front.c **** #if (PWM_Front_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_Front.c **** 
 249:Generated_Source\PSoC5/PWM_Front.c **** 
 250:Generated_Source\PSoC5/PWM_Front.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_Front.c ****         * Function Name: PWM_Front_SetCompareMode
 252:Generated_Source\PSoC5/PWM_Front.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_Front.c ****         *
 254:Generated_Source\PSoC5/PWM_Front.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_Front.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_Front.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_Front.c ****         *
 258:Generated_Source\PSoC5/PWM_Front.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_Front.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_Front.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_Front.c ****         *
 262:Generated_Source\PSoC5/PWM_Front.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_Front.c ****         *  None
 264:Generated_Source\PSoC5/PWM_Front.c ****         *
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 7


 265:Generated_Source\PSoC5/PWM_Front.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_Front.c ****         void PWM_Front_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_Front.c ****         {
 268:Generated_Source\PSoC5/PWM_Front.c ****             #if(PWM_Front_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_Front.c **** 
 270:Generated_Source\PSoC5/PWM_Front.c ****                 #if(0 != PWM_Front_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_Front.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Front_CTRL_CMPMODE
 272:Generated_Source\PSoC5/PWM_Front.c ****                 #else
 273:Generated_Source\PSoC5/PWM_Front.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_Front.c ****                 #endif /* (0 != PWM_Front_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_Front.c **** 
 276:Generated_Source\PSoC5/PWM_Front.c ****                 PWM_Front_CONTROL3 &= ((uint8)(~PWM_Front_CTRL_CMPMODE1_MASK)); /*Clear Existing Da
 277:Generated_Source\PSoC5/PWM_Front.c ****                 PWM_Front_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_Front.c **** 
 279:Generated_Source\PSoC5/PWM_Front.c ****             #elif (PWM_Front_UseControl)
 280:Generated_Source\PSoC5/PWM_Front.c **** 
 281:Generated_Source\PSoC5/PWM_Front.c ****                 #if(0 != PWM_Front_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_Front.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Front_CTRL_CMPMOD
 283:Generated_Source\PSoC5/PWM_Front.c ****                                                 PWM_Front_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_Front.c ****                 #else
 285:Generated_Source\PSoC5/PWM_Front.c ****                     uint8 comparemode1masked = comparemode & PWM_Front_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_Front.c ****                 #endif /* (0 != PWM_Front_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_Front.c **** 
 288:Generated_Source\PSoC5/PWM_Front.c ****                 #if(0 != PWM_Front_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_Front.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Front_CTRL_CMPMOD
 290:Generated_Source\PSoC5/PWM_Front.c ****                                                PWM_Front_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_Front.c ****                 #else
 292:Generated_Source\PSoC5/PWM_Front.c ****                     uint8 comparemode2masked = comparemode & PWM_Front_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_Front.c ****                 #endif /* (0 != PWM_Front_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_Front.c **** 
 295:Generated_Source\PSoC5/PWM_Front.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_Front.c ****                 PWM_Front_CONTROL &= ((uint8)(~(PWM_Front_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_Front.c ****                                             PWM_Front_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_Front.c ****                 PWM_Front_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_Front.c **** 
 300:Generated_Source\PSoC5/PWM_Front.c ****             #else
 301:Generated_Source\PSoC5/PWM_Front.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_Front.c ****             #endif /* (PWM_Front_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_Front.c ****         }
 304:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* PWM_Front_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_Front.c **** 
 306:Generated_Source\PSoC5/PWM_Front.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_Front.c **** 
 308:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_Front.c **** 
 310:Generated_Source\PSoC5/PWM_Front.c **** 
 311:Generated_Source\PSoC5/PWM_Front.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_Front.c ****         * Function Name: PWM_Front_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_Front.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_Front.c ****         *
 315:Generated_Source\PSoC5/PWM_Front.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_Front.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_Front.c ****         *
 318:Generated_Source\PSoC5/PWM_Front.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_Front.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_Front.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_Front.c ****         *
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 8


 322:Generated_Source\PSoC5/PWM_Front.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_Front.c ****         *  None
 324:Generated_Source\PSoC5/PWM_Front.c ****         *
 325:Generated_Source\PSoC5/PWM_Front.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_Front.c ****         void PWM_Front_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_Front.c ****         {
 328:Generated_Source\PSoC5/PWM_Front.c ****             #if(0 != PWM_Front_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_Front.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Front_CTRL_CMPMODE1_SH
 330:Generated_Source\PSoC5/PWM_Front.c ****                                            PWM_Front_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_Front.c ****             #else
 332:Generated_Source\PSoC5/PWM_Front.c ****                 uint8 comparemodemasked = comparemode & PWM_Front_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_Front.c ****             #endif /* (0 != PWM_Front_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_Front.c **** 
 335:Generated_Source\PSoC5/PWM_Front.c ****             #if (PWM_Front_UseControl)
 336:Generated_Source\PSoC5/PWM_Front.c ****                 PWM_Front_CONTROL &= ((uint8)(~PWM_Front_CTRL_CMPMODE1_MASK)); /*Clear existing mod
 337:Generated_Source\PSoC5/PWM_Front.c ****                 PWM_Front_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_Front.c ****             #endif /* (PWM_Front_UseControl) */
 339:Generated_Source\PSoC5/PWM_Front.c ****         }
 340:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* PWM_Front_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_Front.c **** 
 342:Generated_Source\PSoC5/PWM_Front.c **** #if (PWM_Front_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_Front.c **** 
 344:Generated_Source\PSoC5/PWM_Front.c **** 
 345:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_Front.c ****     *
 349:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_Front.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_Front.c ****     *
 352:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_Front.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_Front.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_Front.c ****     *
 356:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 358:Generated_Source\PSoC5/PWM_Front.c ****     *
 359:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_Front.c ****     void PWM_Front_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_Front.c ****     {
 362:Generated_Source\PSoC5/PWM_Front.c **** 
 363:Generated_Source\PSoC5/PWM_Front.c ****         #if(0 != PWM_Front_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_Front.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Front_CTRL_CMPMODE2_SHIFT)
 365:Generated_Source\PSoC5/PWM_Front.c ****                                                  PWM_Front_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_Front.c ****         #else
 367:Generated_Source\PSoC5/PWM_Front.c ****             uint8 comparemodemasked = comparemode & PWM_Front_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (0 != PWM_Front_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_Front.c **** 
 370:Generated_Source\PSoC5/PWM_Front.c ****         #if (PWM_Front_UseControl)
 371:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_CONTROL &= ((uint8)(~PWM_Front_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UseControl) */
 374:Generated_Source\PSoC5/PWM_Front.c ****     }
 375:Generated_Source\PSoC5/PWM_Front.c ****     #endif /*PWM_Front_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_Front.c **** 
 377:Generated_Source\PSoC5/PWM_Front.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_Front.c **** 
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 9


 379:Generated_Source\PSoC5/PWM_Front.c **** 
 380:Generated_Source\PSoC5/PWM_Front.c **** #if (!PWM_Front_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_Front.c **** 
 382:Generated_Source\PSoC5/PWM_Front.c **** 
 383:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_WriteCounter
 385:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_Front.c ****     *
 387:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_Front.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_Front.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_Front.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_Front.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_Front.c ****     *
 393:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_Front.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_Front.c ****     *
 396:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 398:Generated_Source\PSoC5/PWM_Front.c ****     *
 399:Generated_Source\PSoC5/PWM_Front.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_Front.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_Front.c ****     *
 402:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_Front.c ****     void PWM_Front_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_Front.c ****                                        
 405:Generated_Source\PSoC5/PWM_Front.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:Generated_Source\PSoC5/PWM_Front.c ****         CY_SET_REG8(PWM_Front_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 03640040 		.word	1073767427
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	PWM_Front_WriteCounter, .-PWM_Front_WriteCounter
  96              		.section	.text.PWM_Front_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	PWM_Front_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	PWM_Front_ReadCounter, %function
 102              	PWM_Front_ReadCounter:
 103              	.LFB5:
 407:Generated_Source\PSoC5/PWM_Front.c ****     }
 408:Generated_Source\PSoC5/PWM_Front.c **** 
 409:Generated_Source\PSoC5/PWM_Front.c **** 
 410:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 10


 411:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_ReadCounter
 412:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_Front.c ****     *
 414:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_Front.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_Front.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_Front.c ****     *
 418:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 420:Generated_Source\PSoC5/PWM_Front.c ****     *
 421:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_Front.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_Front.c ****     *
 424:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_Front.c ****     uint8 PWM_Front_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_Front.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_Front.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_Front.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_Front.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_Front.c ****           (void)CY_GET_REG8(PWM_Front_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_Front.c **** 
 432:Generated_Source\PSoC5/PWM_Front.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_Front.c ****         return (CY_GET_REG8(PWM_Front_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/PWM_Front.c ****     }
 115              		.loc 1 434 0
 116 0008 7047     		bx	lr
 117              	.L12:
 118 000a 00BF     		.align	2
 119              	.L11:
 120 000c 13640040 		.word	1073767443
 121 0010 53640040 		.word	1073767507
 122              		.cfi_endproc
 123              	.LFE5:
 124              		.size	PWM_Front_ReadCounter, .-PWM_Front_ReadCounter
 125              		.section	.text.PWM_Front_WritePeriod,"ax",%progbits
 126              		.align	2
 127              		.global	PWM_Front_WritePeriod
 128              		.thumb
 129              		.thumb_func
 130              		.type	PWM_Front_WritePeriod, %function
 131              	PWM_Front_WritePeriod:
 132              	.LFB7:
 435:Generated_Source\PSoC5/PWM_Front.c **** 
 436:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UseStatus)
 437:Generated_Source\PSoC5/PWM_Front.c **** 
 438:Generated_Source\PSoC5/PWM_Front.c **** 
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 11


 439:Generated_Source\PSoC5/PWM_Front.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_Front.c ****         * Function Name: PWM_Front_ClearFIFO
 441:Generated_Source\PSoC5/PWM_Front.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_Front.c ****         *
 443:Generated_Source\PSoC5/PWM_Front.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_Front.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_Front.c ****         *
 446:Generated_Source\PSoC5/PWM_Front.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_Front.c ****         *  None
 448:Generated_Source\PSoC5/PWM_Front.c ****         *
 449:Generated_Source\PSoC5/PWM_Front.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_Front.c ****         *  None
 451:Generated_Source\PSoC5/PWM_Front.c ****         *
 452:Generated_Source\PSoC5/PWM_Front.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_Front.c ****         void PWM_Front_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_Front.c ****         {
 455:Generated_Source\PSoC5/PWM_Front.c ****             while(0u != (PWM_Front_ReadStatusRegister() & PWM_Front_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_Front.c ****             {
 457:Generated_Source\PSoC5/PWM_Front.c ****                 (void)PWM_Front_ReadCapture();
 458:Generated_Source\PSoC5/PWM_Front.c ****             }
 459:Generated_Source\PSoC5/PWM_Front.c ****         }
 460:Generated_Source\PSoC5/PWM_Front.c **** 
 461:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* PWM_Front_UseStatus */
 462:Generated_Source\PSoC5/PWM_Front.c **** 
 463:Generated_Source\PSoC5/PWM_Front.c **** #endif /* !PWM_Front_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_Front.c **** 
 465:Generated_Source\PSoC5/PWM_Front.c **** 
 466:Generated_Source\PSoC5/PWM_Front.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_Front.c **** * Function Name: PWM_Front_WritePeriod
 468:Generated_Source\PSoC5/PWM_Front.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_Front.c **** *
 470:Generated_Source\PSoC5/PWM_Front.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_Front.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_Front.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_Front.c **** *
 474:Generated_Source\PSoC5/PWM_Front.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_Front.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_Front.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_Front.c **** *
 478:Generated_Source\PSoC5/PWM_Front.c **** * Return:
 479:Generated_Source\PSoC5/PWM_Front.c **** *  None
 480:Generated_Source\PSoC5/PWM_Front.c **** *
 481:Generated_Source\PSoC5/PWM_Front.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_Front.c **** void PWM_Front_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_Front.c **** {
 133              		.loc 1 483 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.LVL1:
 484:Generated_Source\PSoC5/PWM_Front.c ****     #if(PWM_Front_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_Front.c ****         CY_SET_REG16(PWM_Front_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_Front.c ****     #else
 487:Generated_Source\PSoC5/PWM_Front.c ****         CY_SET_REG8(PWM_Front_PERIOD_LSB_PTR, period);
 139              		.loc 1 487 0
 140 0000 014B     		ldr	r3, .L14
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 12


 141 0002 1870     		strb	r0, [r3]
 142 0004 7047     		bx	lr
 143              	.L15:
 144 0006 00BF     		.align	2
 145              	.L14:
 146 0008 43640040 		.word	1073767491
 147              		.cfi_endproc
 148              	.LFE7:
 149              		.size	PWM_Front_WritePeriod, .-PWM_Front_WritePeriod
 150              		.section	.text.PWM_Front_WriteCompare1,"ax",%progbits
 151              		.align	2
 152              		.global	PWM_Front_WriteCompare1
 153              		.thumb
 154              		.thumb_func
 155              		.type	PWM_Front_WriteCompare1, %function
 156              	PWM_Front_WriteCompare1:
 157              	.LFB8:
 488:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_Front.c **** }
 490:Generated_Source\PSoC5/PWM_Front.c **** 
 491:Generated_Source\PSoC5/PWM_Front.c **** #if (PWM_Front_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_Front.c **** 
 493:Generated_Source\PSoC5/PWM_Front.c **** 
 494:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_WriteCompare
 496:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_Front.c ****     *
 498:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_Front.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_Front.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_Front.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_Front.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_Front.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_Front.c ****     *
 505:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_Front.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_Front.c ****     *
 508:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 510:Generated_Source\PSoC5/PWM_Front.c ****     *
 511:Generated_Source\PSoC5/PWM_Front.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_Front.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_Front.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_Front.c ****     *
 515:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_Front.c ****     void PWM_Front_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_Front.c ****                                        
 518:Generated_Source\PSoC5/PWM_Front.c ****     {
 519:Generated_Source\PSoC5/PWM_Front.c ****         #if(PWM_Front_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_Front.c ****             CY_SET_REG16(PWM_Front_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_Front.c ****         #else
 522:Generated_Source\PSoC5/PWM_Front.c ****             CY_SET_REG8(PWM_Front_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_Front.c **** 
 525:Generated_Source\PSoC5/PWM_Front.c ****         #if (PWM_Front_PWMMode == PWM_Front__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_Front.c ****             #if(PWM_Front_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_Front.c ****                 CY_SET_REG16(PWM_Front_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 13


 528:Generated_Source\PSoC5/PWM_Front.c ****             #else
 529:Generated_Source\PSoC5/PWM_Front.c ****                 CY_SET_REG8(PWM_Front_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_Front.c ****             #endif /* (PWM_Front_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_PWMMode == PWM_Front__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_Front.c ****     }
 533:Generated_Source\PSoC5/PWM_Front.c **** 
 534:Generated_Source\PSoC5/PWM_Front.c **** 
 535:Generated_Source\PSoC5/PWM_Front.c **** #else
 536:Generated_Source\PSoC5/PWM_Front.c **** 
 537:Generated_Source\PSoC5/PWM_Front.c **** 
 538:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_WriteCompare1
 540:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_Front.c ****     *
 542:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_Front.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_Front.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_Front.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_Front.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_Front.c ****     *
 548:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_Front.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_Front.c ****     *
 551:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 553:Generated_Source\PSoC5/PWM_Front.c ****     *
 554:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_Front.c ****     void PWM_Front_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_Front.c ****                                         
 557:Generated_Source\PSoC5/PWM_Front.c ****     {
 158              		.loc 1 557 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL2:
 558:Generated_Source\PSoC5/PWM_Front.c ****         #if(PWM_Front_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_Front.c ****             CY_SET_REG16(PWM_Front_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_Front.c ****         #else
 561:Generated_Source\PSoC5/PWM_Front.c ****             CY_SET_REG8(PWM_Front_COMPARE1_LSB_PTR, compare);
 164              		.loc 1 561 0
 165 0000 014B     		ldr	r3, .L17
 166 0002 1870     		strb	r0, [r3]
 167 0004 7047     		bx	lr
 168              	.L18:
 169 0006 00BF     		.align	2
 170              	.L17:
 171 0008 23640040 		.word	1073767459
 172              		.cfi_endproc
 173              	.LFE8:
 174              		.size	PWM_Front_WriteCompare1, .-PWM_Front_WriteCompare1
 175              		.section	.text.PWM_Front_WriteCompare2,"ax",%progbits
 176              		.align	2
 177              		.global	PWM_Front_WriteCompare2
 178              		.thumb
 179              		.thumb_func
 180              		.type	PWM_Front_WriteCompare2, %function
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 14


 181              	PWM_Front_WriteCompare2:
 182              	.LFB9:
 562:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_Front.c ****     }
 564:Generated_Source\PSoC5/PWM_Front.c **** 
 565:Generated_Source\PSoC5/PWM_Front.c **** 
 566:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_WriteCompare2
 568:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_Front.c ****     *
 570:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_Front.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_Front.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_Front.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_Front.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_Front.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_Front.c ****     *
 577:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_Front.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_Front.c ****     *
 580:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 582:Generated_Source\PSoC5/PWM_Front.c ****     *
 583:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_Front.c ****     void PWM_Front_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_Front.c ****                                         
 586:Generated_Source\PSoC5/PWM_Front.c ****     {
 183              		.loc 1 586 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LVL3:
 587:Generated_Source\PSoC5/PWM_Front.c ****         #if(PWM_Front_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_Front.c ****             CY_SET_REG16(PWM_Front_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_Front.c ****         #else
 590:Generated_Source\PSoC5/PWM_Front.c ****             CY_SET_REG8(PWM_Front_COMPARE2_LSB_PTR, compare);
 189              		.loc 1 590 0
 190 0000 014B     		ldr	r3, .L20
 191 0002 1870     		strb	r0, [r3]
 192 0004 7047     		bx	lr
 193              	.L21:
 194 0006 00BF     		.align	2
 195              	.L20:
 196 0008 33640040 		.word	1073767475
 197              		.cfi_endproc
 198              	.LFE9:
 199              		.size	PWM_Front_WriteCompare2, .-PWM_Front_WriteCompare2
 200              		.section	.text.PWM_Front_SetInterruptMode,"ax",%progbits
 201              		.align	2
 202              		.global	PWM_Front_SetInterruptMode
 203              		.thumb
 204              		.thumb_func
 205              		.type	PWM_Front_SetInterruptMode, %function
 206              	PWM_Front_SetInterruptMode:
 207              	.LFB10:
 591:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UsingFixedFunction) */
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 15


 592:Generated_Source\PSoC5/PWM_Front.c ****     }
 593:Generated_Source\PSoC5/PWM_Front.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_Front.c **** 
 595:Generated_Source\PSoC5/PWM_Front.c **** #if (PWM_Front_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_Front.c **** 
 597:Generated_Source\PSoC5/PWM_Front.c **** 
 598:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_Front.c ****     *
 602:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_Front.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_Front.c ****     *
 605:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_Front.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_Front.c ****     *
 608:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 610:Generated_Source\PSoC5/PWM_Front.c ****     *
 611:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_Front.c ****     void PWM_Front_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_Front.c ****     {
 614:Generated_Source\PSoC5/PWM_Front.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_Front.c ****         #if(!PWM_Front_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_Front.c ****             CY_SET_REG8(PWM_Front_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_Front.c ****         #else
 618:Generated_Source\PSoC5/PWM_Front.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_Front.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_DEADBAND_COUNT &= ((uint8)(~PWM_Front_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_Front.c **** 
 622:Generated_Source\PSoC5/PWM_Front.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_Front.c ****             #if(PWM_Front_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_Front.c ****                 PWM_Front_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Front_DEADBAND_COUNT_SH
 625:Generated_Source\PSoC5/PWM_Front.c ****                                                     PWM_Front_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_Front.c ****             #else
 627:Generated_Source\PSoC5/PWM_Front.c ****                 PWM_Front_DEADBAND_COUNT |= deadtime & PWM_Front_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_Front.c ****             #endif /* (PWM_Front_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_Front.c **** 
 630:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (!PWM_Front_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_Front.c ****     }
 632:Generated_Source\PSoC5/PWM_Front.c **** 
 633:Generated_Source\PSoC5/PWM_Front.c **** 
 634:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_Front.c ****     *
 638:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_Front.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_Front.c ****     *
 641:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 643:Generated_Source\PSoC5/PWM_Front.c ****     *
 644:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_Front.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_Front.c ****     *
 647:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_Front.c ****     uint8 PWM_Front_ReadDeadTime(void) 
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 16


 649:Generated_Source\PSoC5/PWM_Front.c ****     {
 650:Generated_Source\PSoC5/PWM_Front.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_Front.c ****         #if(!PWM_Front_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_Front.c ****             return (CY_GET_REG8(PWM_Front_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_Front.c ****         #else
 654:Generated_Source\PSoC5/PWM_Front.c **** 
 655:Generated_Source\PSoC5/PWM_Front.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_Front.c ****             #if(PWM_Front_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_Front.c ****                 return ((uint8)(((uint8)(PWM_Front_DEADBAND_COUNT & PWM_Front_DEADBAND_COUNT_MASK))
 658:Generated_Source\PSoC5/PWM_Front.c ****                                                                            PWM_Front_DEADBAND_COUNT
 659:Generated_Source\PSoC5/PWM_Front.c ****             #else
 660:Generated_Source\PSoC5/PWM_Front.c ****                 return (PWM_Front_DEADBAND_COUNT & PWM_Front_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_Front.c ****             #endif /* (PWM_Front_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (!PWM_Front_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_Front.c ****     }
 664:Generated_Source\PSoC5/PWM_Front.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_Front.c **** 
 666:Generated_Source\PSoC5/PWM_Front.c **** #if (PWM_Front_UseStatus || PWM_Front_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_Front.c **** 
 668:Generated_Source\PSoC5/PWM_Front.c **** 
 669:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_Front.c ****     *
 673:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_Front.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_Front.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_Front.c ****     *
 677:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_Front.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_Front.c ****     *
 680:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 682:Generated_Source\PSoC5/PWM_Front.c ****     *
 683:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_Front.c ****     void PWM_Front_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_Front.c ****     {
 208              		.loc 1 685 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213              	.LVL4:
 686:Generated_Source\PSoC5/PWM_Front.c ****         CY_SET_REG8(PWM_Front_STATUS_MASK_PTR, interruptMode);
 214              		.loc 1 686 0
 215 0000 014B     		ldr	r3, .L23
 216 0002 1870     		strb	r0, [r3]
 217 0004 7047     		bx	lr
 218              	.L24:
 219 0006 00BF     		.align	2
 220              	.L23:
 221 0008 84640040 		.word	1073767556
 222              		.cfi_endproc
 223              	.LFE10:
 224              		.size	PWM_Front_SetInterruptMode, .-PWM_Front_SetInterruptMode
 225              		.section	.text.PWM_Front_ReadStatusRegister,"ax",%progbits
 226              		.align	2
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 17


 227              		.global	PWM_Front_ReadStatusRegister
 228              		.thumb
 229              		.thumb_func
 230              		.type	PWM_Front_ReadStatusRegister, %function
 231              	PWM_Front_ReadStatusRegister:
 232              	.LFB11:
 687:Generated_Source\PSoC5/PWM_Front.c ****     }
 688:Generated_Source\PSoC5/PWM_Front.c **** 
 689:Generated_Source\PSoC5/PWM_Front.c **** 
 690:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_Front.c ****     *
 694:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_Front.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_Front.c ****     *
 697:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 699:Generated_Source\PSoC5/PWM_Front.c ****     *
 700:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_Front.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_Front.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_Front.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_Front.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_Front.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_Front.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_Front.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_Front.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_Front.c ****     *
 710:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_Front.c ****     uint8 PWM_Front_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_Front.c ****     {
 233              		.loc 1 712 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_Front.c ****         return (CY_GET_REG8(PWM_Front_STATUS_PTR));
 238              		.loc 1 713 0
 239 0000 014B     		ldr	r3, .L26
 240 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/PWM_Front.c ****     }
 241              		.loc 1 714 0
 242 0004 7047     		bx	lr
 243              	.L27:
 244 0006 00BF     		.align	2
 245              	.L26:
 246 0008 64640040 		.word	1073767524
 247              		.cfi_endproc
 248              	.LFE11:
 249              		.size	PWM_Front_ReadStatusRegister, .-PWM_Front_ReadStatusRegister
 250              		.section	.text.PWM_Front_ReadControlRegister,"ax",%progbits
 251              		.align	2
 252              		.global	PWM_Front_ReadControlRegister
 253              		.thumb
 254              		.thumb_func
 255              		.type	PWM_Front_ReadControlRegister, %function
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 18


 256              	PWM_Front_ReadControlRegister:
 257              	.LFB12:
 715:Generated_Source\PSoC5/PWM_Front.c **** 
 716:Generated_Source\PSoC5/PWM_Front.c **** #endif /* (PWM_Front_UseStatus || PWM_Front_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_Front.c **** 
 718:Generated_Source\PSoC5/PWM_Front.c **** 
 719:Generated_Source\PSoC5/PWM_Front.c **** #if (PWM_Front_UseControl)
 720:Generated_Source\PSoC5/PWM_Front.c **** 
 721:Generated_Source\PSoC5/PWM_Front.c **** 
 722:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_Front.c ****     *
 726:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_Front.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_Front.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_Front.c ****     *
 730:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 732:Generated_Source\PSoC5/PWM_Front.c ****     *
 733:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_Front.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_Front.c ****     *
 736:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_Front.c ****     uint8 PWM_Front_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_Front.c ****     {
 258              		.loc 1 738 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM_Front.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_Front.c **** 
 741:Generated_Source\PSoC5/PWM_Front.c ****         result = CY_GET_REG8(PWM_Front_CONTROL_PTR);
 263              		.loc 1 741 0
 264 0000 014B     		ldr	r3, .L29
 265 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 266              	.LVL5:
 742:Generated_Source\PSoC5/PWM_Front.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_Front.c ****     }
 267              		.loc 1 743 0
 268 0004 7047     		bx	lr
 269              	.L30:
 270 0006 00BF     		.align	2
 271              	.L29:
 272 0008 74640040 		.word	1073767540
 273              		.cfi_endproc
 274              	.LFE12:
 275              		.size	PWM_Front_ReadControlRegister, .-PWM_Front_ReadControlRegister
 276              		.section	.text.PWM_Front_WriteControlRegister,"ax",%progbits
 277              		.align	2
 278              		.global	PWM_Front_WriteControlRegister
 279              		.thumb
 280              		.thumb_func
 281              		.type	PWM_Front_WriteControlRegister, %function
 282              	PWM_Front_WriteControlRegister:
 283              	.LFB13:
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 19


 744:Generated_Source\PSoC5/PWM_Front.c **** 
 745:Generated_Source\PSoC5/PWM_Front.c **** 
 746:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_Front.c ****     *
 750:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_Front.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_Front.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_Front.c ****     *
 754:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_Front.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_Front.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_Front.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_Front.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_Front.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_Front.c ****     *
 761:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 763:Generated_Source\PSoC5/PWM_Front.c ****     *
 764:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_Front.c ****     void PWM_Front_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_Front.c ****     {
 284              		.loc 1 766 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289              	.LVL6:
 767:Generated_Source\PSoC5/PWM_Front.c ****         CY_SET_REG8(PWM_Front_CONTROL_PTR, control);
 290              		.loc 1 767 0
 291 0000 014B     		ldr	r3, .L32
 292 0002 1870     		strb	r0, [r3]
 293 0004 7047     		bx	lr
 294              	.L33:
 295 0006 00BF     		.align	2
 296              	.L32:
 297 0008 74640040 		.word	1073767540
 298              		.cfi_endproc
 299              	.LFE13:
 300              		.size	PWM_Front_WriteControlRegister, .-PWM_Front_WriteControlRegister
 301              		.section	.text.PWM_Front_ReadCapture,"ax",%progbits
 302              		.align	2
 303              		.global	PWM_Front_ReadCapture
 304              		.thumb
 305              		.thumb_func
 306              		.type	PWM_Front_ReadCapture, %function
 307              	PWM_Front_ReadCapture:
 308              	.LFB14:
 768:Generated_Source\PSoC5/PWM_Front.c ****     }
 769:Generated_Source\PSoC5/PWM_Front.c **** 
 770:Generated_Source\PSoC5/PWM_Front.c **** #endif /* (PWM_Front_UseControl) */
 771:Generated_Source\PSoC5/PWM_Front.c **** 
 772:Generated_Source\PSoC5/PWM_Front.c **** 
 773:Generated_Source\PSoC5/PWM_Front.c **** #if (!PWM_Front_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_Front.c **** 
 775:Generated_Source\PSoC5/PWM_Front.c **** 
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 20


 776:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_ReadCapture
 778:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_Front.c ****     *
 780:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_Front.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_Front.c ****     *
 783:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 785:Generated_Source\PSoC5/PWM_Front.c ****     *
 786:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_Front.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_Front.c ****     *
 789:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_Front.c ****     uint8 PWM_Front_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_Front.c ****     {
 309              		.loc 1 791 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM_Front.c ****         return (CY_GET_REG8(PWM_Front_CAPTURE_LSB_PTR));
 314              		.loc 1 792 0
 315 0000 014B     		ldr	r3, .L35
 316 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/PWM_Front.c ****     }
 317              		.loc 1 793 0
 318 0004 7047     		bx	lr
 319              	.L36:
 320 0006 00BF     		.align	2
 321              	.L35:
 322 0008 53640040 		.word	1073767507
 323              		.cfi_endproc
 324              	.LFE14:
 325              		.size	PWM_Front_ReadCapture, .-PWM_Front_ReadCapture
 326              		.section	.text.PWM_Front_ClearFIFO,"ax",%progbits
 327              		.align	2
 328              		.global	PWM_Front_ClearFIFO
 329              		.thumb
 330              		.thumb_func
 331              		.type	PWM_Front_ClearFIFO, %function
 332              	PWM_Front_ClearFIFO:
 333              	.LFB6:
 454:Generated_Source\PSoC5/PWM_Front.c ****             while(0u != (PWM_Front_ReadStatusRegister() & PWM_Front_STATUS_FIFONEMPTY))
 334              		.loc 1 454 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 08B5     		push	{r3, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 3, -8
 341              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/PWM_Front.c ****             {
 342              		.loc 1 455 0
 343 0002 01E0     		b	.L38
 344              	.L39:
 457:Generated_Source\PSoC5/PWM_Front.c ****             }
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 21


 345              		.loc 1 457 0
 346 0004 FFF7FEFF 		bl	PWM_Front_ReadCapture
 347              	.LVL7:
 348              	.L38:
 455:Generated_Source\PSoC5/PWM_Front.c ****             {
 349              		.loc 1 455 0
 350 0008 FFF7FEFF 		bl	PWM_Front_ReadStatusRegister
 351              	.LVL8:
 352 000c 10F0100F 		tst	r0, #16
 353 0010 F8D1     		bne	.L39
 459:Generated_Source\PSoC5/PWM_Front.c **** 
 354              		.loc 1 459 0
 355 0012 08BD     		pop	{r3, pc}
 356              		.cfi_endproc
 357              	.LFE6:
 358              		.size	PWM_Front_ClearFIFO, .-PWM_Front_ClearFIFO
 359              		.section	.text.PWM_Front_Init,"ax",%progbits
 360              		.align	2
 361              		.global	PWM_Front_Init
 362              		.thumb
 363              		.thumb_func
 364              		.type	PWM_Front_Init, %function
 365              	PWM_Front_Init:
 366              	.LFB1:
  85:Generated_Source\PSoC5/PWM_Front.c ****     #if (PWM_Front_UsingFixedFunction || PWM_Front_UseControl)
 367              		.loc 1 85 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 08B5     		push	{r3, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_Front.c ****                 ((uint8)(~PWM_Front_CTRL_CMPMODE1_MASK));
 375              		.loc 1 117 0
 376 0002 134A     		ldr	r2, .L43
 377 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 378 0006 03F0C003 		and	r3, r3, #192
 379              	.LVL9:
 119:Generated_Source\PSoC5/PWM_Front.c ****                                    PWM_Front_DEFAULT_COMPARE1_MODE;
 380              		.loc 1 119 0
 381 000a 43F00903 		orr	r3, r3, #9
 382              	.LVL10:
 383 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/PWM_Front.c ****         #else /* (PWM_Front_Resolution == 16)*/
 384              		.loc 1 126 0
 385 0010 1F32     		adds	r2, r2, #31
 386 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 387 0014 43F00103 		orr	r3, r3, #1
 388 0018 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (!PWM_Front_UsingFixedFunction) */
 389              		.loc 1 133 0
 390 001a FF20     		movs	r0, #255
 391 001c FFF7FEFF 		bl	PWM_Front_WriteCounter
 392              	.LVL11:
 136:Generated_Source\PSoC5/PWM_Front.c **** 
 393              		.loc 1 136 0
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 22


 394 0020 FF20     		movs	r0, #255
 395 0022 FFF7FEFF 		bl	PWM_Front_WritePeriod
 396              	.LVL12:
 141:Generated_Source\PSoC5/PWM_Front.c ****             PWM_Front_WriteCompare2(PWM_Front_INIT_COMPARE_VALUE2);
 397              		.loc 1 141 0
 398 0026 7F20     		movs	r0, #127
 399 0028 FFF7FEFF 		bl	PWM_Front_WriteCompare1
 400              	.LVL13:
 142:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UseOneCompareMode) */
 401              		.loc 1 142 0
 402 002c 7F20     		movs	r0, #127
 403 002e FFF7FEFF 		bl	PWM_Front_WriteCompare2
 404              	.LVL14:
 154:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UseStatus || PWM_Front_UsingFixedFunction) */
 405              		.loc 1 154 0
 406 0032 0020     		movs	r0, #0
 407 0034 FFF7FEFF 		bl	PWM_Front_SetInterruptMode
 408              	.LVL15:
 167:Generated_Source\PSoC5/PWM_Front.c ****             /* Use the interrupt output of the status register for IRQ output */
 409              		.loc 1 167 0
 410 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 411              	.LVL16:
 169:Generated_Source\PSoC5/PWM_Front.c **** 
 412              		.loc 1 169 0
 413 003c 054A     		ldr	r2, .L43+4
 414 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 415 0040 43F01003 		orr	r3, r3, #16
 416 0044 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/PWM_Front.c **** 
 417              		.loc 1 172 0
 418 0046 FFF7FEFF 		bl	CyExitCriticalSection
 419              	.LVL17:
 176:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UseStatus) */
 420              		.loc 1 176 0
 421 004a FFF7FEFF 		bl	PWM_Front_ClearFIFO
 422              	.LVL18:
 423 004e 08BD     		pop	{r3, pc}
 424              	.L44:
 425              		.align	2
 426              	.L43:
 427 0050 74640040 		.word	1073767540
 428 0054 94640040 		.word	1073767572
 429              		.cfi_endproc
 430              	.LFE1:
 431              		.size	PWM_Front_Init, .-PWM_Front_Init
 432              		.section	.text.PWM_Front_Start,"ax",%progbits
 433              		.align	2
 434              		.global	PWM_Front_Start
 435              		.thumb
 436              		.thumb_func
 437              		.type	PWM_Front_Start, %function
 438              	PWM_Front_Start:
 439              	.LFB0:
  56:Generated_Source\PSoC5/PWM_Front.c ****     /* If not Initialized then initialize all required hardware and software */
 440              		.loc 1 56 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 23


 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_Front.c ****     {
 448              		.loc 1 58 0
 449 0002 054B     		ldr	r3, .L48
 450 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451 0006 23B9     		cbnz	r3, .L46
  60:Generated_Source\PSoC5/PWM_Front.c ****         PWM_Front_initVar = 1u;
 452              		.loc 1 60 0
 453 0008 FFF7FEFF 		bl	PWM_Front_Init
 454              	.LVL19:
  61:Generated_Source\PSoC5/PWM_Front.c ****     }
 455              		.loc 1 61 0
 456 000c 0122     		movs	r2, #1
 457 000e 024B     		ldr	r3, .L48
 458 0010 1A70     		strb	r2, [r3]
 459              	.L46:
  63:Generated_Source\PSoC5/PWM_Front.c **** 
 460              		.loc 1 63 0
 461 0012 FFF7FEFF 		bl	PWM_Front_Enable
 462              	.LVL20:
 463 0016 08BD     		pop	{r3, pc}
 464              	.L49:
 465              		.align	2
 466              	.L48:
 467 0018 00000000 		.word	.LANCHOR0
 468              		.cfi_endproc
 469              	.LFE0:
 470              		.size	PWM_Front_Start, .-PWM_Front_Start
 471              		.section	.text.PWM_Front_ReadCompare1,"ax",%progbits
 472              		.align	2
 473              		.global	PWM_Front_ReadCompare1
 474              		.thumb
 475              		.thumb_func
 476              		.type	PWM_Front_ReadCompare1, %function
 477              	PWM_Front_ReadCompare1:
 478              	.LFB15:
 794:Generated_Source\PSoC5/PWM_Front.c **** 
 795:Generated_Source\PSoC5/PWM_Front.c **** #endif /* (!PWM_Front_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_Front.c **** 
 797:Generated_Source\PSoC5/PWM_Front.c **** 
 798:Generated_Source\PSoC5/PWM_Front.c **** #if (PWM_Front_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_Front.c **** 
 800:Generated_Source\PSoC5/PWM_Front.c **** 
 801:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_ReadCompare
 803:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_Front.c ****     *
 805:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_Front.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_Front.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_Front.c ****     *
 809:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_Front.c ****     *  None
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 24


 811:Generated_Source\PSoC5/PWM_Front.c ****     *
 812:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_Front.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_Front.c ****     *
 815:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_Front.c ****     uint8 PWM_Front_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_Front.c ****     {
 818:Generated_Source\PSoC5/PWM_Front.c ****         #if(PWM_Front_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_Front.c ****             return ((uint8)CY_GET_REG16(PWM_Front_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_Front.c ****         #else
 821:Generated_Source\PSoC5/PWM_Front.c ****             return (CY_GET_REG8(PWM_Front_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_Front.c ****         #endif /* (PWM_Front_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_Front.c ****     }
 824:Generated_Source\PSoC5/PWM_Front.c **** 
 825:Generated_Source\PSoC5/PWM_Front.c **** #else
 826:Generated_Source\PSoC5/PWM_Front.c **** 
 827:Generated_Source\PSoC5/PWM_Front.c **** 
 828:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_ReadCompare1
 830:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_Front.c ****     *
 832:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_Front.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_Front.c ****     *
 835:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 837:Generated_Source\PSoC5/PWM_Front.c ****     *
 838:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_Front.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_Front.c ****     *
 841:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_Front.c ****     uint8 PWM_Front_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_Front.c ****     {
 479              		.loc 1 843 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 844:Generated_Source\PSoC5/PWM_Front.c ****         return (CY_GET_REG8(PWM_Front_COMPARE1_LSB_PTR));
 484              		.loc 1 844 0
 485 0000 014B     		ldr	r3, .L51
 486 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 845:Generated_Source\PSoC5/PWM_Front.c ****     }
 487              		.loc 1 845 0
 488 0004 7047     		bx	lr
 489              	.L52:
 490 0006 00BF     		.align	2
 491              	.L51:
 492 0008 23640040 		.word	1073767459
 493              		.cfi_endproc
 494              	.LFE15:
 495              		.size	PWM_Front_ReadCompare1, .-PWM_Front_ReadCompare1
 496              		.section	.text.PWM_Front_ReadCompare2,"ax",%progbits
 497              		.align	2
 498              		.global	PWM_Front_ReadCompare2
 499              		.thumb
 500              		.thumb_func
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 25


 501              		.type	PWM_Front_ReadCompare2, %function
 502              	PWM_Front_ReadCompare2:
 503              	.LFB16:
 846:Generated_Source\PSoC5/PWM_Front.c **** 
 847:Generated_Source\PSoC5/PWM_Front.c **** 
 848:Generated_Source\PSoC5/PWM_Front.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_Front.c ****     * Function Name: PWM_Front_ReadCompare2
 850:Generated_Source\PSoC5/PWM_Front.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_Front.c ****     *
 852:Generated_Source\PSoC5/PWM_Front.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_Front.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_Front.c ****     *
 855:Generated_Source\PSoC5/PWM_Front.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_Front.c ****     *  None
 857:Generated_Source\PSoC5/PWM_Front.c ****     *
 858:Generated_Source\PSoC5/PWM_Front.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_Front.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_Front.c ****     *
 861:Generated_Source\PSoC5/PWM_Front.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_Front.c ****     uint8 PWM_Front_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_Front.c ****     {
 504              		.loc 1 863 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 864:Generated_Source\PSoC5/PWM_Front.c ****         return (CY_GET_REG8(PWM_Front_COMPARE2_LSB_PTR));
 509              		.loc 1 864 0
 510 0000 014B     		ldr	r3, .L54
 511 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 865:Generated_Source\PSoC5/PWM_Front.c ****     }
 512              		.loc 1 865 0
 513 0004 7047     		bx	lr
 514              	.L55:
 515 0006 00BF     		.align	2
 516              	.L54:
 517 0008 33640040 		.word	1073767475
 518              		.cfi_endproc
 519              	.LFE16:
 520              		.size	PWM_Front_ReadCompare2, .-PWM_Front_ReadCompare2
 521              		.section	.text.PWM_Front_ReadPeriod,"ax",%progbits
 522              		.align	2
 523              		.global	PWM_Front_ReadPeriod
 524              		.thumb
 525              		.thumb_func
 526              		.type	PWM_Front_ReadPeriod, %function
 527              	PWM_Front_ReadPeriod:
 528              	.LFB17:
 866:Generated_Source\PSoC5/PWM_Front.c **** 
 867:Generated_Source\PSoC5/PWM_Front.c **** #endif /* (PWM_Front_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_Front.c **** 
 869:Generated_Source\PSoC5/PWM_Front.c **** 
 870:Generated_Source\PSoC5/PWM_Front.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_Front.c **** * Function Name: PWM_Front_ReadPeriod
 872:Generated_Source\PSoC5/PWM_Front.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_Front.c **** *
 874:Generated_Source\PSoC5/PWM_Front.c **** * Summary:
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 26


 875:Generated_Source\PSoC5/PWM_Front.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_Front.c **** *
 877:Generated_Source\PSoC5/PWM_Front.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_Front.c **** *  None
 879:Generated_Source\PSoC5/PWM_Front.c **** *
 880:Generated_Source\PSoC5/PWM_Front.c **** * Return:
 881:Generated_Source\PSoC5/PWM_Front.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_Front.c **** *
 883:Generated_Source\PSoC5/PWM_Front.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_Front.c **** uint8 PWM_Front_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_Front.c **** {
 529              		.loc 1 885 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_Front.c ****     #if(PWM_Front_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_Front.c ****         return ((uint8)CY_GET_REG16(PWM_Front_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_Front.c ****     #else
 889:Generated_Source\PSoC5/PWM_Front.c ****         return (CY_GET_REG8(PWM_Front_PERIOD_LSB_PTR));
 534              		.loc 1 889 0
 535 0000 014B     		ldr	r3, .L57
 536 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/PWM_Front.c ****     #endif /* (PWM_Front_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_Front.c **** }
 537              		.loc 1 891 0
 538 0004 7047     		bx	lr
 539              	.L58:
 540 0006 00BF     		.align	2
 541              	.L57:
 542 0008 43640040 		.word	1073767491
 543              		.cfi_endproc
 544              	.LFE17:
 545              		.size	PWM_Front_ReadPeriod, .-PWM_Front_ReadPeriod
 546              		.global	PWM_Front_initVar
 547              		.bss
 548              		.set	.LANCHOR0,. + 0
 549              		.type	PWM_Front_initVar, %object
 550              		.size	PWM_Front_initVar, 1
 551              	PWM_Front_initVar:
 552 0000 00       		.space	1
 553              		.text
 554              	.Letext0:
 555              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 556              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 557              		.section	.debug_info,"",%progbits
 558              	.Ldebug_info0:
 559 0000 7A030000 		.4byte	0x37a
 560 0004 0400     		.2byte	0x4
 561 0006 00000000 		.4byte	.Ldebug_abbrev0
 562 000a 04       		.byte	0x4
 563 000b 01       		.uleb128 0x1
 564 000c 2D020000 		.4byte	.LASF40
 565 0010 01       		.byte	0x1
 566 0011 D5000000 		.4byte	.LASF41
 567 0015 4E010000 		.4byte	.LASF42
 568 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 27


 569 001d 00000000 		.4byte	0
 570 0021 00000000 		.4byte	.Ldebug_line0
 571 0025 02       		.uleb128 0x2
 572 0026 01       		.byte	0x1
 573 0027 06       		.byte	0x6
 574 0028 88030000 		.4byte	.LASF0
 575 002c 02       		.uleb128 0x2
 576 002d 01       		.byte	0x1
 577 002e 08       		.byte	0x8
 578 002f 17010000 		.4byte	.LASF1
 579 0033 02       		.uleb128 0x2
 580 0034 02       		.byte	0x2
 581 0035 05       		.byte	0x5
 582 0036 14020000 		.4byte	.LASF2
 583 003a 02       		.uleb128 0x2
 584 003b 02       		.byte	0x2
 585 003c 07       		.byte	0x7
 586 003d 70000000 		.4byte	.LASF3
 587 0041 02       		.uleb128 0x2
 588 0042 04       		.byte	0x4
 589 0043 05       		.byte	0x5
 590 0044 7A030000 		.4byte	.LASF4
 591 0048 02       		.uleb128 0x2
 592 0049 04       		.byte	0x4
 593 004a 07       		.byte	0x7
 594 004b 3C010000 		.4byte	.LASF5
 595 004f 02       		.uleb128 0x2
 596 0050 08       		.byte	0x8
 597 0051 05       		.byte	0x5
 598 0052 19030000 		.4byte	.LASF6
 599 0056 02       		.uleb128 0x2
 600 0057 08       		.byte	0x8
 601 0058 07       		.byte	0x7
 602 0059 00010000 		.4byte	.LASF7
 603 005d 03       		.uleb128 0x3
 604 005e 04       		.byte	0x4
 605 005f 05       		.byte	0x5
 606 0060 696E7400 		.ascii	"int\000"
 607 0064 02       		.uleb128 0x2
 608 0065 04       		.byte	0x4
 609 0066 07       		.byte	0x7
 610 0067 D2020000 		.4byte	.LASF8
 611 006b 04       		.uleb128 0x4
 612 006c 65030000 		.4byte	.LASF12
 613 0070 02       		.byte	0x2
 614 0071 9201     		.2byte	0x192
 615 0073 2C000000 		.4byte	0x2c
 616 0077 02       		.uleb128 0x2
 617 0078 04       		.byte	0x4
 618 0079 04       		.byte	0x4
 619 007a 07000000 		.4byte	.LASF9
 620 007e 02       		.uleb128 0x2
 621 007f 08       		.byte	0x8
 622 0080 04       		.byte	0x4
 623 0081 83000000 		.4byte	.LASF10
 624 0085 02       		.uleb128 0x2
 625 0086 01       		.byte	0x1
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 28


 626 0087 08       		.byte	0x8
 627 0088 83030000 		.4byte	.LASF11
 628 008c 04       		.uleb128 0x4
 629 008d 25010000 		.4byte	.LASF13
 630 0091 02       		.byte	0x2
 631 0092 3C02     		.2byte	0x23c
 632 0094 98000000 		.4byte	0x98
 633 0098 05       		.uleb128 0x5
 634 0099 6B000000 		.4byte	0x6b
 635 009d 02       		.uleb128 0x2
 636 009e 04       		.byte	0x4
 637 009f 07       		.byte	0x7
 638 00a0 10030000 		.4byte	.LASF14
 639 00a4 06       		.uleb128 0x6
 640 00a5 EF010000 		.4byte	.LASF15
 641 00a9 01       		.byte	0x1
 642 00aa C7       		.byte	0xc7
 643 00ab 00000000 		.4byte	.LFB2
 644 00af 10000000 		.4byte	.LFE2-.LFB2
 645 00b3 01       		.uleb128 0x1
 646 00b4 9C       		.byte	0x9c
 647 00b5 06       		.uleb128 0x6
 648 00b6 6B030000 		.4byte	.LASF16
 649 00ba 01       		.byte	0x1
 650 00bb E9       		.byte	0xe9
 651 00bc 00000000 		.4byte	.LFB3
 652 00c0 10000000 		.4byte	.LFE3-.LFB3
 653 00c4 01       		.uleb128 0x1
 654 00c5 9C       		.byte	0x9c
 655 00c6 07       		.uleb128 0x7
 656 00c7 59000000 		.4byte	.LASF17
 657 00cb 01       		.byte	0x1
 658 00cc 9301     		.2byte	0x193
 659 00ce 00000000 		.4byte	.LFB4
 660 00d2 0C000000 		.4byte	.LFE4-.LFB4
 661 00d6 01       		.uleb128 0x1
 662 00d7 9C       		.byte	0x9c
 663 00d8 EB000000 		.4byte	0xeb
 664 00dc 08       		.uleb128 0x8
 665 00dd F8000000 		.4byte	.LASF19
 666 00e1 01       		.byte	0x1
 667 00e2 9301     		.2byte	0x193
 668 00e4 6B000000 		.4byte	0x6b
 669 00e8 01       		.uleb128 0x1
 670 00e9 50       		.byte	0x50
 671 00ea 00       		.byte	0
 672 00eb 09       		.uleb128 0x9
 673 00ec BA030000 		.4byte	.LASF26
 674 00f0 01       		.byte	0x1
 675 00f1 A901     		.2byte	0x1a9
 676 00f3 6B000000 		.4byte	0x6b
 677 00f7 00000000 		.4byte	.LFB5
 678 00fb 14000000 		.4byte	.LFE5-.LFB5
 679 00ff 01       		.uleb128 0x1
 680 0100 9C       		.byte	0x9c
 681 0101 07       		.uleb128 0x7
 682 0102 1D000000 		.4byte	.LASF18
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 29


 683 0106 01       		.byte	0x1
 684 0107 E201     		.2byte	0x1e2
 685 0109 00000000 		.4byte	.LFB7
 686 010d 0C000000 		.4byte	.LFE7-.LFB7
 687 0111 01       		.uleb128 0x1
 688 0112 9C       		.byte	0x9c
 689 0113 26010000 		.4byte	0x126
 690 0117 08       		.uleb128 0x8
 691 0118 52000000 		.4byte	.LASF20
 692 011c 01       		.byte	0x1
 693 011d E201     		.2byte	0x1e2
 694 011f 6B000000 		.4byte	0x6b
 695 0123 01       		.uleb128 0x1
 696 0124 50       		.byte	0x50
 697 0125 00       		.byte	0
 698 0126 07       		.uleb128 0x7
 699 0127 35030000 		.4byte	.LASF21
 700 012b 01       		.byte	0x1
 701 012c 2B02     		.2byte	0x22b
 702 012e 00000000 		.4byte	.LFB8
 703 0132 0C000000 		.4byte	.LFE8-.LFB8
 704 0136 01       		.uleb128 0x1
 705 0137 9C       		.byte	0x9c
 706 0138 4B010000 		.4byte	0x14b
 707 013c 08       		.uleb128 0x8
 708 013d 94030000 		.4byte	.LASF22
 709 0141 01       		.byte	0x1
 710 0142 2B02     		.2byte	0x22b
 711 0144 6B000000 		.4byte	0x6b
 712 0148 01       		.uleb128 0x1
 713 0149 50       		.byte	0x50
 714 014a 00       		.byte	0
 715 014b 07       		.uleb128 0x7
 716 014c 4D030000 		.4byte	.LASF23
 717 0150 01       		.byte	0x1
 718 0151 4802     		.2byte	0x248
 719 0153 00000000 		.4byte	.LFB9
 720 0157 0C000000 		.4byte	.LFE9-.LFB9
 721 015b 01       		.uleb128 0x1
 722 015c 9C       		.byte	0x9c
 723 015d 70010000 		.4byte	0x170
 724 0161 08       		.uleb128 0x8
 725 0162 94030000 		.4byte	.LASF22
 726 0166 01       		.byte	0x1
 727 0167 4802     		.2byte	0x248
 728 0169 6B000000 		.4byte	0x6b
 729 016d 01       		.uleb128 0x1
 730 016e 50       		.byte	0x50
 731 016f 00       		.byte	0
 732 0170 07       		.uleb128 0x7
 733 0171 D4010000 		.4byte	.LASF24
 734 0175 01       		.byte	0x1
 735 0176 AC02     		.2byte	0x2ac
 736 0178 00000000 		.4byte	.LFB10
 737 017c 0C000000 		.4byte	.LFE10-.LFB10
 738 0180 01       		.uleb128 0x1
 739 0181 9C       		.byte	0x9c
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 30


 740 0182 95010000 		.4byte	0x195
 741 0186 08       		.uleb128 0x8
 742 0187 27030000 		.4byte	.LASF25
 743 018b 01       		.byte	0x1
 744 018c AC02     		.2byte	0x2ac
 745 018e 6B000000 		.4byte	0x6b
 746 0192 01       		.uleb128 0x1
 747 0193 50       		.byte	0x50
 748 0194 00       		.byte	0
 749 0195 09       		.uleb128 0x9
 750 0196 B8000000 		.4byte	.LASF27
 751 019a 01       		.byte	0x1
 752 019b C702     		.2byte	0x2c7
 753 019d 6B000000 		.4byte	0x6b
 754 01a1 00000000 		.4byte	.LFB11
 755 01a5 0C000000 		.4byte	.LFE11-.LFB11
 756 01a9 01       		.uleb128 0x1
 757 01aa 9C       		.byte	0x9c
 758 01ab 0A       		.uleb128 0xa
 759 01ac 9C030000 		.4byte	.LASF43
 760 01b0 01       		.byte	0x1
 761 01b1 E102     		.2byte	0x2e1
 762 01b3 6B000000 		.4byte	0x6b
 763 01b7 00000000 		.4byte	.LFB12
 764 01bb 0C000000 		.4byte	.LFE12-.LFB12
 765 01bf 01       		.uleb128 0x1
 766 01c0 9C       		.byte	0x9c
 767 01c1 D4010000 		.4byte	0x1d4
 768 01c5 0B       		.uleb128 0xb
 769 01c6 00000000 		.4byte	.LASF33
 770 01ca 01       		.byte	0x1
 771 01cb E302     		.2byte	0x2e3
 772 01cd 6B000000 		.4byte	0x6b
 773 01d1 01       		.uleb128 0x1
 774 01d2 50       		.byte	0x50
 775 01d3 00       		.byte	0
 776 01d4 07       		.uleb128 0x7
 777 01d5 33000000 		.4byte	.LASF28
 778 01d9 01       		.byte	0x1
 779 01da FD02     		.2byte	0x2fd
 780 01dc 00000000 		.4byte	.LFB13
 781 01e0 0C000000 		.4byte	.LFE13-.LFB13
 782 01e4 01       		.uleb128 0x1
 783 01e5 9C       		.byte	0x9c
 784 01e6 F9010000 		.4byte	0x1f9
 785 01ea 08       		.uleb128 0x8
 786 01eb B3010000 		.4byte	.LASF29
 787 01ef 01       		.byte	0x1
 788 01f0 FD02     		.2byte	0x2fd
 789 01f2 6B000000 		.4byte	0x6b
 790 01f6 01       		.uleb128 0x1
 791 01f7 50       		.byte	0x50
 792 01f8 00       		.byte	0
 793 01f9 09       		.uleb128 0x9
 794 01fa F5020000 		.4byte	.LASF30
 795 01fe 01       		.byte	0x1
 796 01ff 1603     		.2byte	0x316
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 31


 797 0201 6B000000 		.4byte	0x6b
 798 0205 00000000 		.4byte	.LFB14
 799 0209 0C000000 		.4byte	.LFE14-.LFB14
 800 020d 01       		.uleb128 0x1
 801 020e 9C       		.byte	0x9c
 802 020f 07       		.uleb128 0x7
 803 0210 00020000 		.4byte	.LASF31
 804 0214 01       		.byte	0x1
 805 0215 C501     		.2byte	0x1c5
 806 0217 00000000 		.4byte	.LFB6
 807 021b 14000000 		.4byte	.LFE6-.LFB6
 808 021f 01       		.uleb128 0x1
 809 0220 9C       		.byte	0x9c
 810 0221 38020000 		.4byte	0x238
 811 0225 0C       		.uleb128 0xc
 812 0226 08000000 		.4byte	.LVL7
 813 022a F9010000 		.4byte	0x1f9
 814 022e 0C       		.uleb128 0xc
 815 022f 0C000000 		.4byte	.LVL8
 816 0233 95010000 		.4byte	0x195
 817 0237 00       		.byte	0
 818 0238 0D       		.uleb128 0xd
 819 0239 1E020000 		.4byte	.LASF32
 820 023d 01       		.byte	0x1
 821 023e 54       		.byte	0x54
 822 023f 00000000 		.4byte	.LFB1
 823 0243 58000000 		.4byte	.LFE1-.LFB1
 824 0247 01       		.uleb128 0x1
 825 0248 9C       		.byte	0x9c
 826 0249 EA020000 		.4byte	0x2ea
 827 024d 0E       		.uleb128 0xe
 828 024e 0B030000 		.4byte	.LASF34
 829 0252 01       		.byte	0x1
 830 0253 57       		.byte	0x57
 831 0254 6B000000 		.4byte	0x6b
 832 0258 00000000 		.4byte	.LLST0
 833 025c 0E       		.uleb128 0xe
 834 025d BB010000 		.4byte	.LASF35
 835 0261 01       		.byte	0x1
 836 0262 5D       		.byte	0x5d
 837 0263 6B000000 		.4byte	0x6b
 838 0267 13000000 		.4byte	.LLST1
 839 026b 0F       		.uleb128 0xf
 840 026c 20000000 		.4byte	.LVL11
 841 0270 C6000000 		.4byte	0xc6
 842 0274 7F020000 		.4byte	0x27f
 843 0278 10       		.uleb128 0x10
 844 0279 01       		.uleb128 0x1
 845 027a 50       		.byte	0x50
 846 027b 02       		.uleb128 0x2
 847 027c 09       		.byte	0x9
 848 027d FF       		.byte	0xff
 849 027e 00       		.byte	0
 850 027f 0F       		.uleb128 0xf
 851 0280 26000000 		.4byte	.LVL12
 852 0284 01010000 		.4byte	0x101
 853 0288 93020000 		.4byte	0x293
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 32


 854 028c 10       		.uleb128 0x10
 855 028d 01       		.uleb128 0x1
 856 028e 50       		.byte	0x50
 857 028f 02       		.uleb128 0x2
 858 0290 09       		.byte	0x9
 859 0291 FF       		.byte	0xff
 860 0292 00       		.byte	0
 861 0293 0F       		.uleb128 0xf
 862 0294 2C000000 		.4byte	.LVL13
 863 0298 26010000 		.4byte	0x126
 864 029c A7020000 		.4byte	0x2a7
 865 02a0 10       		.uleb128 0x10
 866 02a1 01       		.uleb128 0x1
 867 02a2 50       		.byte	0x50
 868 02a3 02       		.uleb128 0x2
 869 02a4 08       		.byte	0x8
 870 02a5 7F       		.byte	0x7f
 871 02a6 00       		.byte	0
 872 02a7 0F       		.uleb128 0xf
 873 02a8 32000000 		.4byte	.LVL14
 874 02ac 4B010000 		.4byte	0x14b
 875 02b0 BB020000 		.4byte	0x2bb
 876 02b4 10       		.uleb128 0x10
 877 02b5 01       		.uleb128 0x1
 878 02b6 50       		.byte	0x50
 879 02b7 02       		.uleb128 0x2
 880 02b8 08       		.byte	0x8
 881 02b9 7F       		.byte	0x7f
 882 02ba 00       		.byte	0
 883 02bb 0F       		.uleb128 0xf
 884 02bc 38000000 		.4byte	.LVL15
 885 02c0 70010000 		.4byte	0x170
 886 02c4 CE020000 		.4byte	0x2ce
 887 02c8 10       		.uleb128 0x10
 888 02c9 01       		.uleb128 0x1
 889 02ca 50       		.byte	0x50
 890 02cb 01       		.uleb128 0x1
 891 02cc 30       		.byte	0x30
 892 02cd 00       		.byte	0
 893 02ce 0C       		.uleb128 0xc
 894 02cf 3C000000 		.4byte	.LVL16
 895 02d3 65030000 		.4byte	0x365
 896 02d7 0C       		.uleb128 0xc
 897 02d8 4A000000 		.4byte	.LVL17
 898 02dc 70030000 		.4byte	0x370
 899 02e0 0C       		.uleb128 0xc
 900 02e1 4E000000 		.4byte	.LVL18
 901 02e5 0F020000 		.4byte	0x20f
 902 02e9 00       		.byte	0
 903 02ea 0D       		.uleb128 0xd
 904 02eb 0D000000 		.4byte	.LASF36
 905 02ef 01       		.byte	0x1
 906 02f0 37       		.byte	0x37
 907 02f1 00000000 		.4byte	.LFB0
 908 02f5 1C000000 		.4byte	.LFE0-.LFB0
 909 02f9 01       		.uleb128 0x1
 910 02fa 9C       		.byte	0x9c
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 33


 911 02fb 12030000 		.4byte	0x312
 912 02ff 0C       		.uleb128 0xc
 913 0300 0C000000 		.4byte	.LVL19
 914 0304 38020000 		.4byte	0x238
 915 0308 0C       		.uleb128 0xc
 916 0309 16000000 		.4byte	.LVL20
 917 030d A4000000 		.4byte	0xa4
 918 0311 00       		.byte	0
 919 0312 09       		.uleb128 0x9
 920 0313 8A000000 		.4byte	.LASF37
 921 0317 01       		.byte	0x1
 922 0318 4A03     		.2byte	0x34a
 923 031a 6B000000 		.4byte	0x6b
 924 031e 00000000 		.4byte	.LFB15
 925 0322 0C000000 		.4byte	.LFE15-.LFB15
 926 0326 01       		.uleb128 0x1
 927 0327 9C       		.byte	0x9c
 928 0328 09       		.uleb128 0x9
 929 0329 A1000000 		.4byte	.LASF38
 930 032d 01       		.byte	0x1
 931 032e 5E03     		.2byte	0x35e
 932 0330 6B000000 		.4byte	0x6b
 933 0334 00000000 		.4byte	.LFB16
 934 0338 0C000000 		.4byte	.LFE16-.LFB16
 935 033c 01       		.uleb128 0x1
 936 033d 9C       		.byte	0x9c
 937 033e 09       		.uleb128 0x9
 938 033f 9E010000 		.4byte	.LASF39
 939 0343 01       		.byte	0x1
 940 0344 7403     		.2byte	0x374
 941 0346 6B000000 		.4byte	0x6b
 942 034a 00000000 		.4byte	.LFB17
 943 034e 0C000000 		.4byte	.LFE17-.LFB17
 944 0352 01       		.uleb128 0x1
 945 0353 9C       		.byte	0x9c
 946 0354 11       		.uleb128 0x11
 947 0355 2A010000 		.4byte	.LASF44
 948 0359 01       		.byte	0x1
 949 035a 20       		.byte	0x20
 950 035b 6B000000 		.4byte	0x6b
 951 035f 05       		.uleb128 0x5
 952 0360 03       		.byte	0x3
 953 0361 00000000 		.4byte	PWM_Front_initVar
 954 0365 12       		.uleb128 0x12
 955 0366 BB020000 		.4byte	.LASF45
 956 036a 03       		.byte	0x3
 957 036b 7D       		.byte	0x7d
 958 036c 6B000000 		.4byte	0x6b
 959 0370 13       		.uleb128 0x13
 960 0371 DF020000 		.4byte	.LASF46
 961 0375 03       		.byte	0x3
 962 0376 7E       		.byte	0x7e
 963 0377 14       		.uleb128 0x14
 964 0378 6B000000 		.4byte	0x6b
 965 037c 00       		.byte	0
 966 037d 00       		.byte	0
 967              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 34


 968              	.Ldebug_abbrev0:
 969 0000 01       		.uleb128 0x1
 970 0001 11       		.uleb128 0x11
 971 0002 01       		.byte	0x1
 972 0003 25       		.uleb128 0x25
 973 0004 0E       		.uleb128 0xe
 974 0005 13       		.uleb128 0x13
 975 0006 0B       		.uleb128 0xb
 976 0007 03       		.uleb128 0x3
 977 0008 0E       		.uleb128 0xe
 978 0009 1B       		.uleb128 0x1b
 979 000a 0E       		.uleb128 0xe
 980 000b 55       		.uleb128 0x55
 981 000c 17       		.uleb128 0x17
 982 000d 11       		.uleb128 0x11
 983 000e 01       		.uleb128 0x1
 984 000f 10       		.uleb128 0x10
 985 0010 17       		.uleb128 0x17
 986 0011 00       		.byte	0
 987 0012 00       		.byte	0
 988 0013 02       		.uleb128 0x2
 989 0014 24       		.uleb128 0x24
 990 0015 00       		.byte	0
 991 0016 0B       		.uleb128 0xb
 992 0017 0B       		.uleb128 0xb
 993 0018 3E       		.uleb128 0x3e
 994 0019 0B       		.uleb128 0xb
 995 001a 03       		.uleb128 0x3
 996 001b 0E       		.uleb128 0xe
 997 001c 00       		.byte	0
 998 001d 00       		.byte	0
 999 001e 03       		.uleb128 0x3
 1000 001f 24       		.uleb128 0x24
 1001 0020 00       		.byte	0
 1002 0021 0B       		.uleb128 0xb
 1003 0022 0B       		.uleb128 0xb
 1004 0023 3E       		.uleb128 0x3e
 1005 0024 0B       		.uleb128 0xb
 1006 0025 03       		.uleb128 0x3
 1007 0026 08       		.uleb128 0x8
 1008 0027 00       		.byte	0
 1009 0028 00       		.byte	0
 1010 0029 04       		.uleb128 0x4
 1011 002a 16       		.uleb128 0x16
 1012 002b 00       		.byte	0
 1013 002c 03       		.uleb128 0x3
 1014 002d 0E       		.uleb128 0xe
 1015 002e 3A       		.uleb128 0x3a
 1016 002f 0B       		.uleb128 0xb
 1017 0030 3B       		.uleb128 0x3b
 1018 0031 05       		.uleb128 0x5
 1019 0032 49       		.uleb128 0x49
 1020 0033 13       		.uleb128 0x13
 1021 0034 00       		.byte	0
 1022 0035 00       		.byte	0
 1023 0036 05       		.uleb128 0x5
 1024 0037 35       		.uleb128 0x35
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 35


 1025 0038 00       		.byte	0
 1026 0039 49       		.uleb128 0x49
 1027 003a 13       		.uleb128 0x13
 1028 003b 00       		.byte	0
 1029 003c 00       		.byte	0
 1030 003d 06       		.uleb128 0x6
 1031 003e 2E       		.uleb128 0x2e
 1032 003f 00       		.byte	0
 1033 0040 3F       		.uleb128 0x3f
 1034 0041 19       		.uleb128 0x19
 1035 0042 03       		.uleb128 0x3
 1036 0043 0E       		.uleb128 0xe
 1037 0044 3A       		.uleb128 0x3a
 1038 0045 0B       		.uleb128 0xb
 1039 0046 3B       		.uleb128 0x3b
 1040 0047 0B       		.uleb128 0xb
 1041 0048 27       		.uleb128 0x27
 1042 0049 19       		.uleb128 0x19
 1043 004a 11       		.uleb128 0x11
 1044 004b 01       		.uleb128 0x1
 1045 004c 12       		.uleb128 0x12
 1046 004d 06       		.uleb128 0x6
 1047 004e 40       		.uleb128 0x40
 1048 004f 18       		.uleb128 0x18
 1049 0050 9742     		.uleb128 0x2117
 1050 0052 19       		.uleb128 0x19
 1051 0053 00       		.byte	0
 1052 0054 00       		.byte	0
 1053 0055 07       		.uleb128 0x7
 1054 0056 2E       		.uleb128 0x2e
 1055 0057 01       		.byte	0x1
 1056 0058 3F       		.uleb128 0x3f
 1057 0059 19       		.uleb128 0x19
 1058 005a 03       		.uleb128 0x3
 1059 005b 0E       		.uleb128 0xe
 1060 005c 3A       		.uleb128 0x3a
 1061 005d 0B       		.uleb128 0xb
 1062 005e 3B       		.uleb128 0x3b
 1063 005f 05       		.uleb128 0x5
 1064 0060 27       		.uleb128 0x27
 1065 0061 19       		.uleb128 0x19
 1066 0062 11       		.uleb128 0x11
 1067 0063 01       		.uleb128 0x1
 1068 0064 12       		.uleb128 0x12
 1069 0065 06       		.uleb128 0x6
 1070 0066 40       		.uleb128 0x40
 1071 0067 18       		.uleb128 0x18
 1072 0068 9742     		.uleb128 0x2117
 1073 006a 19       		.uleb128 0x19
 1074 006b 01       		.uleb128 0x1
 1075 006c 13       		.uleb128 0x13
 1076 006d 00       		.byte	0
 1077 006e 00       		.byte	0
 1078 006f 08       		.uleb128 0x8
 1079 0070 05       		.uleb128 0x5
 1080 0071 00       		.byte	0
 1081 0072 03       		.uleb128 0x3
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 36


 1082 0073 0E       		.uleb128 0xe
 1083 0074 3A       		.uleb128 0x3a
 1084 0075 0B       		.uleb128 0xb
 1085 0076 3B       		.uleb128 0x3b
 1086 0077 05       		.uleb128 0x5
 1087 0078 49       		.uleb128 0x49
 1088 0079 13       		.uleb128 0x13
 1089 007a 02       		.uleb128 0x2
 1090 007b 18       		.uleb128 0x18
 1091 007c 00       		.byte	0
 1092 007d 00       		.byte	0
 1093 007e 09       		.uleb128 0x9
 1094 007f 2E       		.uleb128 0x2e
 1095 0080 00       		.byte	0
 1096 0081 3F       		.uleb128 0x3f
 1097 0082 19       		.uleb128 0x19
 1098 0083 03       		.uleb128 0x3
 1099 0084 0E       		.uleb128 0xe
 1100 0085 3A       		.uleb128 0x3a
 1101 0086 0B       		.uleb128 0xb
 1102 0087 3B       		.uleb128 0x3b
 1103 0088 05       		.uleb128 0x5
 1104 0089 27       		.uleb128 0x27
 1105 008a 19       		.uleb128 0x19
 1106 008b 49       		.uleb128 0x49
 1107 008c 13       		.uleb128 0x13
 1108 008d 11       		.uleb128 0x11
 1109 008e 01       		.uleb128 0x1
 1110 008f 12       		.uleb128 0x12
 1111 0090 06       		.uleb128 0x6
 1112 0091 40       		.uleb128 0x40
 1113 0092 18       		.uleb128 0x18
 1114 0093 9742     		.uleb128 0x2117
 1115 0095 19       		.uleb128 0x19
 1116 0096 00       		.byte	0
 1117 0097 00       		.byte	0
 1118 0098 0A       		.uleb128 0xa
 1119 0099 2E       		.uleb128 0x2e
 1120 009a 01       		.byte	0x1
 1121 009b 3F       		.uleb128 0x3f
 1122 009c 19       		.uleb128 0x19
 1123 009d 03       		.uleb128 0x3
 1124 009e 0E       		.uleb128 0xe
 1125 009f 3A       		.uleb128 0x3a
 1126 00a0 0B       		.uleb128 0xb
 1127 00a1 3B       		.uleb128 0x3b
 1128 00a2 05       		.uleb128 0x5
 1129 00a3 27       		.uleb128 0x27
 1130 00a4 19       		.uleb128 0x19
 1131 00a5 49       		.uleb128 0x49
 1132 00a6 13       		.uleb128 0x13
 1133 00a7 11       		.uleb128 0x11
 1134 00a8 01       		.uleb128 0x1
 1135 00a9 12       		.uleb128 0x12
 1136 00aa 06       		.uleb128 0x6
 1137 00ab 40       		.uleb128 0x40
 1138 00ac 18       		.uleb128 0x18
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 37


 1139 00ad 9742     		.uleb128 0x2117
 1140 00af 19       		.uleb128 0x19
 1141 00b0 01       		.uleb128 0x1
 1142 00b1 13       		.uleb128 0x13
 1143 00b2 00       		.byte	0
 1144 00b3 00       		.byte	0
 1145 00b4 0B       		.uleb128 0xb
 1146 00b5 34       		.uleb128 0x34
 1147 00b6 00       		.byte	0
 1148 00b7 03       		.uleb128 0x3
 1149 00b8 0E       		.uleb128 0xe
 1150 00b9 3A       		.uleb128 0x3a
 1151 00ba 0B       		.uleb128 0xb
 1152 00bb 3B       		.uleb128 0x3b
 1153 00bc 05       		.uleb128 0x5
 1154 00bd 49       		.uleb128 0x49
 1155 00be 13       		.uleb128 0x13
 1156 00bf 02       		.uleb128 0x2
 1157 00c0 18       		.uleb128 0x18
 1158 00c1 00       		.byte	0
 1159 00c2 00       		.byte	0
 1160 00c3 0C       		.uleb128 0xc
 1161 00c4 898201   		.uleb128 0x4109
 1162 00c7 00       		.byte	0
 1163 00c8 11       		.uleb128 0x11
 1164 00c9 01       		.uleb128 0x1
 1165 00ca 31       		.uleb128 0x31
 1166 00cb 13       		.uleb128 0x13
 1167 00cc 00       		.byte	0
 1168 00cd 00       		.byte	0
 1169 00ce 0D       		.uleb128 0xd
 1170 00cf 2E       		.uleb128 0x2e
 1171 00d0 01       		.byte	0x1
 1172 00d1 3F       		.uleb128 0x3f
 1173 00d2 19       		.uleb128 0x19
 1174 00d3 03       		.uleb128 0x3
 1175 00d4 0E       		.uleb128 0xe
 1176 00d5 3A       		.uleb128 0x3a
 1177 00d6 0B       		.uleb128 0xb
 1178 00d7 3B       		.uleb128 0x3b
 1179 00d8 0B       		.uleb128 0xb
 1180 00d9 27       		.uleb128 0x27
 1181 00da 19       		.uleb128 0x19
 1182 00db 11       		.uleb128 0x11
 1183 00dc 01       		.uleb128 0x1
 1184 00dd 12       		.uleb128 0x12
 1185 00de 06       		.uleb128 0x6
 1186 00df 40       		.uleb128 0x40
 1187 00e0 18       		.uleb128 0x18
 1188 00e1 9742     		.uleb128 0x2117
 1189 00e3 19       		.uleb128 0x19
 1190 00e4 01       		.uleb128 0x1
 1191 00e5 13       		.uleb128 0x13
 1192 00e6 00       		.byte	0
 1193 00e7 00       		.byte	0
 1194 00e8 0E       		.uleb128 0xe
 1195 00e9 34       		.uleb128 0x34
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 38


 1196 00ea 00       		.byte	0
 1197 00eb 03       		.uleb128 0x3
 1198 00ec 0E       		.uleb128 0xe
 1199 00ed 3A       		.uleb128 0x3a
 1200 00ee 0B       		.uleb128 0xb
 1201 00ef 3B       		.uleb128 0x3b
 1202 00f0 0B       		.uleb128 0xb
 1203 00f1 49       		.uleb128 0x49
 1204 00f2 13       		.uleb128 0x13
 1205 00f3 02       		.uleb128 0x2
 1206 00f4 17       		.uleb128 0x17
 1207 00f5 00       		.byte	0
 1208 00f6 00       		.byte	0
 1209 00f7 0F       		.uleb128 0xf
 1210 00f8 898201   		.uleb128 0x4109
 1211 00fb 01       		.byte	0x1
 1212 00fc 11       		.uleb128 0x11
 1213 00fd 01       		.uleb128 0x1
 1214 00fe 31       		.uleb128 0x31
 1215 00ff 13       		.uleb128 0x13
 1216 0100 01       		.uleb128 0x1
 1217 0101 13       		.uleb128 0x13
 1218 0102 00       		.byte	0
 1219 0103 00       		.byte	0
 1220 0104 10       		.uleb128 0x10
 1221 0105 8A8201   		.uleb128 0x410a
 1222 0108 00       		.byte	0
 1223 0109 02       		.uleb128 0x2
 1224 010a 18       		.uleb128 0x18
 1225 010b 9142     		.uleb128 0x2111
 1226 010d 18       		.uleb128 0x18
 1227 010e 00       		.byte	0
 1228 010f 00       		.byte	0
 1229 0110 11       		.uleb128 0x11
 1230 0111 34       		.uleb128 0x34
 1231 0112 00       		.byte	0
 1232 0113 03       		.uleb128 0x3
 1233 0114 0E       		.uleb128 0xe
 1234 0115 3A       		.uleb128 0x3a
 1235 0116 0B       		.uleb128 0xb
 1236 0117 3B       		.uleb128 0x3b
 1237 0118 0B       		.uleb128 0xb
 1238 0119 49       		.uleb128 0x49
 1239 011a 13       		.uleb128 0x13
 1240 011b 3F       		.uleb128 0x3f
 1241 011c 19       		.uleb128 0x19
 1242 011d 02       		.uleb128 0x2
 1243 011e 18       		.uleb128 0x18
 1244 011f 00       		.byte	0
 1245 0120 00       		.byte	0
 1246 0121 12       		.uleb128 0x12
 1247 0122 2E       		.uleb128 0x2e
 1248 0123 00       		.byte	0
 1249 0124 3F       		.uleb128 0x3f
 1250 0125 19       		.uleb128 0x19
 1251 0126 03       		.uleb128 0x3
 1252 0127 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 39


 1253 0128 3A       		.uleb128 0x3a
 1254 0129 0B       		.uleb128 0xb
 1255 012a 3B       		.uleb128 0x3b
 1256 012b 0B       		.uleb128 0xb
 1257 012c 27       		.uleb128 0x27
 1258 012d 19       		.uleb128 0x19
 1259 012e 49       		.uleb128 0x49
 1260 012f 13       		.uleb128 0x13
 1261 0130 3C       		.uleb128 0x3c
 1262 0131 19       		.uleb128 0x19
 1263 0132 00       		.byte	0
 1264 0133 00       		.byte	0
 1265 0134 13       		.uleb128 0x13
 1266 0135 2E       		.uleb128 0x2e
 1267 0136 01       		.byte	0x1
 1268 0137 3F       		.uleb128 0x3f
 1269 0138 19       		.uleb128 0x19
 1270 0139 03       		.uleb128 0x3
 1271 013a 0E       		.uleb128 0xe
 1272 013b 3A       		.uleb128 0x3a
 1273 013c 0B       		.uleb128 0xb
 1274 013d 3B       		.uleb128 0x3b
 1275 013e 0B       		.uleb128 0xb
 1276 013f 27       		.uleb128 0x27
 1277 0140 19       		.uleb128 0x19
 1278 0141 3C       		.uleb128 0x3c
 1279 0142 19       		.uleb128 0x19
 1280 0143 00       		.byte	0
 1281 0144 00       		.byte	0
 1282 0145 14       		.uleb128 0x14
 1283 0146 05       		.uleb128 0x5
 1284 0147 00       		.byte	0
 1285 0148 49       		.uleb128 0x49
 1286 0149 13       		.uleb128 0x13
 1287 014a 00       		.byte	0
 1288 014b 00       		.byte	0
 1289 014c 00       		.byte	0
 1290              		.section	.debug_loc,"",%progbits
 1291              	.Ldebug_loc0:
 1292              	.LLST0:
 1293 0000 0A000000 		.4byte	.LVL9
 1294 0004 0E000000 		.4byte	.LVL10
 1295 0008 0100     		.2byte	0x1
 1296 000a 53       		.byte	0x53
 1297 000b 00000000 		.4byte	0
 1298 000f 00000000 		.4byte	0
 1299              	.LLST1:
 1300 0013 3C000000 		.4byte	.LVL16
 1301 0017 49000000 		.4byte	.LVL17-1
 1302 001b 0100     		.2byte	0x1
 1303 001d 50       		.byte	0x50
 1304 001e 00000000 		.4byte	0
 1305 0022 00000000 		.4byte	0
 1306              		.section	.debug_aranges,"",%progbits
 1307 0000 A4000000 		.4byte	0xa4
 1308 0004 0200     		.2byte	0x2
 1309 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 40


 1310 000a 04       		.byte	0x4
 1311 000b 00       		.byte	0
 1312 000c 0000     		.2byte	0
 1313 000e 0000     		.2byte	0
 1314 0010 00000000 		.4byte	.LFB2
 1315 0014 10000000 		.4byte	.LFE2-.LFB2
 1316 0018 00000000 		.4byte	.LFB3
 1317 001c 10000000 		.4byte	.LFE3-.LFB3
 1318 0020 00000000 		.4byte	.LFB4
 1319 0024 0C000000 		.4byte	.LFE4-.LFB4
 1320 0028 00000000 		.4byte	.LFB5
 1321 002c 14000000 		.4byte	.LFE5-.LFB5
 1322 0030 00000000 		.4byte	.LFB7
 1323 0034 0C000000 		.4byte	.LFE7-.LFB7
 1324 0038 00000000 		.4byte	.LFB8
 1325 003c 0C000000 		.4byte	.LFE8-.LFB8
 1326 0040 00000000 		.4byte	.LFB9
 1327 0044 0C000000 		.4byte	.LFE9-.LFB9
 1328 0048 00000000 		.4byte	.LFB10
 1329 004c 0C000000 		.4byte	.LFE10-.LFB10
 1330 0050 00000000 		.4byte	.LFB11
 1331 0054 0C000000 		.4byte	.LFE11-.LFB11
 1332 0058 00000000 		.4byte	.LFB12
 1333 005c 0C000000 		.4byte	.LFE12-.LFB12
 1334 0060 00000000 		.4byte	.LFB13
 1335 0064 0C000000 		.4byte	.LFE13-.LFB13
 1336 0068 00000000 		.4byte	.LFB14
 1337 006c 0C000000 		.4byte	.LFE14-.LFB14
 1338 0070 00000000 		.4byte	.LFB6
 1339 0074 14000000 		.4byte	.LFE6-.LFB6
 1340 0078 00000000 		.4byte	.LFB1
 1341 007c 58000000 		.4byte	.LFE1-.LFB1
 1342 0080 00000000 		.4byte	.LFB0
 1343 0084 1C000000 		.4byte	.LFE0-.LFB0
 1344 0088 00000000 		.4byte	.LFB15
 1345 008c 0C000000 		.4byte	.LFE15-.LFB15
 1346 0090 00000000 		.4byte	.LFB16
 1347 0094 0C000000 		.4byte	.LFE16-.LFB16
 1348 0098 00000000 		.4byte	.LFB17
 1349 009c 0C000000 		.4byte	.LFE17-.LFB17
 1350 00a0 00000000 		.4byte	0
 1351 00a4 00000000 		.4byte	0
 1352              		.section	.debug_ranges,"",%progbits
 1353              	.Ldebug_ranges0:
 1354 0000 00000000 		.4byte	.LFB2
 1355 0004 10000000 		.4byte	.LFE2
 1356 0008 00000000 		.4byte	.LFB3
 1357 000c 10000000 		.4byte	.LFE3
 1358 0010 00000000 		.4byte	.LFB4
 1359 0014 0C000000 		.4byte	.LFE4
 1360 0018 00000000 		.4byte	.LFB5
 1361 001c 14000000 		.4byte	.LFE5
 1362 0020 00000000 		.4byte	.LFB7
 1363 0024 0C000000 		.4byte	.LFE7
 1364 0028 00000000 		.4byte	.LFB8
 1365 002c 0C000000 		.4byte	.LFE8
 1366 0030 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 41


 1367 0034 0C000000 		.4byte	.LFE9
 1368 0038 00000000 		.4byte	.LFB10
 1369 003c 0C000000 		.4byte	.LFE10
 1370 0040 00000000 		.4byte	.LFB11
 1371 0044 0C000000 		.4byte	.LFE11
 1372 0048 00000000 		.4byte	.LFB12
 1373 004c 0C000000 		.4byte	.LFE12
 1374 0050 00000000 		.4byte	.LFB13
 1375 0054 0C000000 		.4byte	.LFE13
 1376 0058 00000000 		.4byte	.LFB14
 1377 005c 0C000000 		.4byte	.LFE14
 1378 0060 00000000 		.4byte	.LFB6
 1379 0064 14000000 		.4byte	.LFE6
 1380 0068 00000000 		.4byte	.LFB1
 1381 006c 58000000 		.4byte	.LFE1
 1382 0070 00000000 		.4byte	.LFB0
 1383 0074 1C000000 		.4byte	.LFE0
 1384 0078 00000000 		.4byte	.LFB15
 1385 007c 0C000000 		.4byte	.LFE15
 1386 0080 00000000 		.4byte	.LFB16
 1387 0084 0C000000 		.4byte	.LFE16
 1388 0088 00000000 		.4byte	.LFB17
 1389 008c 0C000000 		.4byte	.LFE17
 1390 0090 00000000 		.4byte	0
 1391 0094 00000000 		.4byte	0
 1392              		.section	.debug_line,"",%progbits
 1393              	.Ldebug_line0:
 1394 0000 A9010000 		.section	.debug_str,"MS",%progbits,1
 1394      02005100 
 1394      00000201 
 1394      FB0E0D00 
 1394      01010101 
 1395              	.LASF33:
 1396 0000 72657375 		.ascii	"result\000"
 1396      6C7400
 1397              	.LASF9:
 1398 0007 666C6F61 		.ascii	"float\000"
 1398      7400
 1399              	.LASF36:
 1400 000d 50574D5F 		.ascii	"PWM_Front_Start\000"
 1400      46726F6E 
 1400      745F5374 
 1400      61727400 
 1401              	.LASF18:
 1402 001d 50574D5F 		.ascii	"PWM_Front_WritePeriod\000"
 1402      46726F6E 
 1402      745F5772 
 1402      69746550 
 1402      6572696F 
 1403              	.LASF28:
 1404 0033 50574D5F 		.ascii	"PWM_Front_WriteControlRegister\000"
 1404      46726F6E 
 1404      745F5772 
 1404      69746543 
 1404      6F6E7472 
 1405              	.LASF20:
 1406 0052 70657269 		.ascii	"period\000"
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 42


 1406      6F6400
 1407              	.LASF17:
 1408 0059 50574D5F 		.ascii	"PWM_Front_WriteCounter\000"
 1408      46726F6E 
 1408      745F5772 
 1408      69746543 
 1408      6F756E74 
 1409              	.LASF3:
 1410 0070 73686F72 		.ascii	"short unsigned int\000"
 1410      7420756E 
 1410      7369676E 
 1410      65642069 
 1410      6E7400
 1411              	.LASF10:
 1412 0083 646F7562 		.ascii	"double\000"
 1412      6C6500
 1413              	.LASF37:
 1414 008a 50574D5F 		.ascii	"PWM_Front_ReadCompare1\000"
 1414      46726F6E 
 1414      745F5265 
 1414      6164436F 
 1414      6D706172 
 1415              	.LASF38:
 1416 00a1 50574D5F 		.ascii	"PWM_Front_ReadCompare2\000"
 1416      46726F6E 
 1416      745F5265 
 1416      6164436F 
 1416      6D706172 
 1417              	.LASF27:
 1418 00b8 50574D5F 		.ascii	"PWM_Front_ReadStatusRegister\000"
 1418      46726F6E 
 1418      745F5265 
 1418      61645374 
 1418      61747573 
 1419              	.LASF41:
 1420 00d5 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_Front.c\000"
 1420      72617465 
 1420      645F536F 
 1420      75726365 
 1420      5C50536F 
 1421              	.LASF19:
 1422 00f8 636F756E 		.ascii	"counter\000"
 1422      74657200 
 1423              	.LASF7:
 1424 0100 6C6F6E67 		.ascii	"long long unsigned int\000"
 1424      206C6F6E 
 1424      6720756E 
 1424      7369676E 
 1424      65642069 
 1425              	.LASF1:
 1426 0117 756E7369 		.ascii	"unsigned char\000"
 1426      676E6564 
 1426      20636861 
 1426      7200
 1427              	.LASF13:
 1428 0125 72656738 		.ascii	"reg8\000"
 1428      00
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 43


 1429              	.LASF44:
 1430 012a 50574D5F 		.ascii	"PWM_Front_initVar\000"
 1430      46726F6E 
 1430      745F696E 
 1430      69745661 
 1430      7200
 1431              	.LASF5:
 1432 013c 6C6F6E67 		.ascii	"long unsigned int\000"
 1432      20756E73 
 1432      69676E65 
 1432      6420696E 
 1432      7400
 1433              	.LASF42:
 1434 014e 433A5C55 		.ascii	"C:\\Users\\Ludovic\\Documents\\PSoC Creator\\CY8CKI"
 1434      73657273 
 1434      5C4C7564 
 1434      6F766963 
 1434      5C446F63 
 1435 017c 542D3035 		.ascii	"T-050\\BE_Systemes_Embarques.cydsn\000"
 1435      305C4245 
 1435      5F537973 
 1435      74656D65 
 1435      735F456D 
 1436              	.LASF39:
 1437 019e 50574D5F 		.ascii	"PWM_Front_ReadPeriod\000"
 1437      46726F6E 
 1437      745F5265 
 1437      61645065 
 1437      72696F64 
 1438              	.LASF29:
 1439 01b3 636F6E74 		.ascii	"control\000"
 1439      726F6C00 
 1440              	.LASF35:
 1441 01bb 50574D5F 		.ascii	"PWM_Front_interruptState\000"
 1441      46726F6E 
 1441      745F696E 
 1441      74657272 
 1441      75707453 
 1442              	.LASF24:
 1443 01d4 50574D5F 		.ascii	"PWM_Front_SetInterruptMode\000"
 1443      46726F6E 
 1443      745F5365 
 1443      74496E74 
 1443      65727275 
 1444              	.LASF15:
 1445 01ef 50574D5F 		.ascii	"PWM_Front_Enable\000"
 1445      46726F6E 
 1445      745F456E 
 1445      61626C65 
 1445      00
 1446              	.LASF31:
 1447 0200 50574D5F 		.ascii	"PWM_Front_ClearFIFO\000"
 1447      46726F6E 
 1447      745F436C 
 1447      65617246 
 1447      49464F00 
 1448              	.LASF2:
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 44


 1449 0214 73686F72 		.ascii	"short int\000"
 1449      7420696E 
 1449      7400
 1450              	.LASF32:
 1451 021e 50574D5F 		.ascii	"PWM_Front_Init\000"
 1451      46726F6E 
 1451      745F496E 
 1451      697400
 1452              	.LASF40:
 1453 022d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1453      4320342E 
 1453      392E3320 
 1453      32303135 
 1453      30333033 
 1454 0260 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1454      20726576 
 1454      6973696F 
 1454      6E203232 
 1454      31323230 
 1455 0293 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1455      66756E63 
 1455      74696F6E 
 1455      2D736563 
 1455      74696F6E 
 1456              	.LASF45:
 1457 02bb 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1457      74657243 
 1457      72697469 
 1457      63616C53 
 1457      65637469 
 1458              	.LASF8:
 1459 02d2 756E7369 		.ascii	"unsigned int\000"
 1459      676E6564 
 1459      20696E74 
 1459      00
 1460              	.LASF46:
 1461 02df 43794578 		.ascii	"CyExitCriticalSection\000"
 1461      69744372 
 1461      69746963 
 1461      616C5365 
 1461      6374696F 
 1462              	.LASF30:
 1463 02f5 50574D5F 		.ascii	"PWM_Front_ReadCapture\000"
 1463      46726F6E 
 1463      745F5265 
 1463      61644361 
 1463      70747572 
 1464              	.LASF34:
 1465 030b 6374726C 		.ascii	"ctrl\000"
 1465      00
 1466              	.LASF14:
 1467 0310 73697A65 		.ascii	"sizetype\000"
 1467      74797065 
 1467      00
 1468              	.LASF6:
 1469 0319 6C6F6E67 		.ascii	"long long int\000"
 1469      206C6F6E 
ARM GAS  C:\Users\Ludovic\AppData\Local\Temp\cc12ZYuk.s 			page 45


 1469      6720696E 
 1469      7400
 1470              	.LASF25:
 1471 0327 696E7465 		.ascii	"interruptMode\000"
 1471      72727570 
 1471      744D6F64 
 1471      6500
 1472              	.LASF21:
 1473 0335 50574D5F 		.ascii	"PWM_Front_WriteCompare1\000"
 1473      46726F6E 
 1473      745F5772 
 1473      69746543 
 1473      6F6D7061 
 1474              	.LASF23:
 1475 034d 50574D5F 		.ascii	"PWM_Front_WriteCompare2\000"
 1475      46726F6E 
 1475      745F5772 
 1475      69746543 
 1475      6F6D7061 
 1476              	.LASF12:
 1477 0365 75696E74 		.ascii	"uint8\000"
 1477      3800
 1478              	.LASF16:
 1479 036b 50574D5F 		.ascii	"PWM_Front_Stop\000"
 1479      46726F6E 
 1479      745F5374 
 1479      6F7000
 1480              	.LASF4:
 1481 037a 6C6F6E67 		.ascii	"long int\000"
 1481      20696E74 
 1481      00
 1482              	.LASF11:
 1483 0383 63686172 		.ascii	"char\000"
 1483      00
 1484              	.LASF0:
 1485 0388 7369676E 		.ascii	"signed char\000"
 1485      65642063 
 1485      68617200 
 1486              	.LASF22:
 1487 0394 636F6D70 		.ascii	"compare\000"
 1487      61726500 
 1488              	.LASF43:
 1489 039c 50574D5F 		.ascii	"PWM_Front_ReadControlRegister\000"
 1489      46726F6E 
 1489      745F5265 
 1489      6164436F 
 1489      6E74726F 
 1490              	.LASF26:
 1491 03ba 50574D5F 		.ascii	"PWM_Front_ReadCounter\000"
 1491      46726F6E 
 1491      745F5265 
 1491      6164436F 
 1491      756E7465 
 1492              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
